[
  {
    "quid": 2000014,
    "question": "Who would wish to visit Ireland in July, the year of 2007?",
    "ground_truth": [
      "Bertie Ahern"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Ireland"
      ],
      "target_relations": [
        "wish to visit"
      ],
      "time_constraints": "2007-07",
      "answer_type": "entity",
      "query_strategy": "首先识别出关键实体'Ireland'和目标关系'wish to visit'，然后应用时间约束'2007-07'来筛选出在2007年7月有意愿访问爱尔兰的实体。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Ireland']\n        time_constraint = \"2007-07\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Bertie Ahern"
    ],
    "evaluation": {
      "precision": 1.0,
      "recall": 1.0,
      "f1": 1.0,
      "exact_match": true,
      "intersection_count": 1
    },
    "process_time": 11.055915117263794
  },
  {
    "quid": 2000015,
    "question": "In which year did Viktor Orban visit Iran for the first time?",
    "ground_truth": [
      "2015"
    ],
    "analysis": {
      "question_type": "time_query",
      "key_entities": [
        "Viktor Orban",
        "Iran"
      ],
      "target_relations": [
        "visit"
      ],
      "time_constraints": "first time",
      "answer_type": "time",
      "query_strategy": "首先识别出关键实体'Viktor Orban'和'Iran'，以及目标关系'visit'。问题询问的是第一次访问的时间，因此需要在时序知识图谱中查询Viktor Orban访问伊朗的最早时间记录。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    try:\n        entities = ['Viktor Orban', 'Iran']\n        target_relations = ['Make_a_visit']\n        \n        results = []\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 对于\"first time\"类型的查询，需要找到特定关系的最早记录\n        if len(entities) >= 2:\n            entity1, entity2 = entities[0], entities[1]\n            \n            # 尝试多种实体名称格式\n            entity1_patterns = [entity1, entity1.replace(' ', '_'), entity1.replace('_', ' ')]\n            entity2_patterns = [entity2, entity2.replace(' ', '_'), entity2.replace('_', ' ')]\n            \n            for e1_pattern in entity1_patterns:\n                for e2_pattern in entity2_patterns:\n                    # 查找 entity1 -> relation -> entity2 的记录\n                    mask = (\n                        (df['head'].str.contains(e1_pattern, case=False, na=False)) &\n                        (df['tail'].str.contains(e2_pattern, case=False, na=False)) &\n                        (df['relation'].isin(target_relations))\n                    )\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            year = row['timestamp'][:4]\n                            results.append(year)\n        \n        # 返回最早的年份\n        if results:\n            earliest_year = min(results)\n            return [earliest_year]\n        else:\n            return []\n            \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "2015"
    ],
    "evaluation": {
      "precision": 1.0,
      "recall": 1.0,
      "f1": 1.0,
      "exact_match": true,
      "intersection_count": 1
    },
    "process_time": 11.773802280426025
  },
  {
    "quid": 2000016,
    "question": "Who made optimistic remarks about Iran after the Organisation for Economic Cooperation and Development?",
    "ground_truth": [
      "South Korea",
      "Party Member (Iraq)",
      "France",
      "China",
      "Iraq",
      "Member of Legislative (Govt) (Iran)",
      "Japan",
      "Head of Government (Ukraine)",
      "Thailand",
      "Kazakhstan"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Organisation for Economic Cooperation and Development",
        "Iran"
      ],
      "target_relations": [
        "made optimistic remarks about"
      ],
      "time_constraints": "after the Organisation for Economic Cooperation and Development",
      "answer_type": "entity",
      "query_strategy": "首先识别出关键实体'Organisation for Economic Cooperation and Development'和'Iran'，然后查找在'Organisation for Economic Cooperation and Development'之后与'Iran'有'optimistic remarks about'关系的实体。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Organisation for Economic Cooperation and Development', 'Iran']\n        time_constraint = \"after the Organisation for Economic Cooperation and Development\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [],
    "evaluation": {
      "precision": 0,
      "recall": 0.0,
      "f1": 0,
      "exact_match": false,
      "intersection_count": 0
    },
    "process_time": 9.299494981765747
  },
  {
    "quid": 2000017,
    "question": "Who made optimistic remarks about Yasuo Fukuda after Japan?",
    "ground_truth": [
      "Government Official (Japan)",
      "China"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Yasuo Fukuda",
        "Japan"
      ],
      "target_relations": [
        "made optimistic remarks about"
      ],
      "time_constraints": "after Japan",
      "answer_type": "entity",
      "query_strategy": "首先识别出关键实体'Yasuo Fukuda'和'Japan'，然后提取目标关系'made optimistic remarks about'，时间约束是'after Japan'，需要查询在Japan之后对Yasuo Fukuda发表乐观言论的实体。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Yasuo Fukuda', 'Japan']\n        time_constraint = \"after Japan\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "China",
      "Dmitry Anatolyevich Medvedev",
      "Japan",
      "Vietnam",
      "South Korea",
      "Lee Myung Bak",
      "France",
      "Ireland",
      "South Africa",
      "Roh Moo Hyun",
      "Wen Jiabao",
      "Member of Legislative (Govt) (South Korea)",
      "Head of Government (South Korea)",
      "Tony Blair",
      "Chongwadai",
      "Janez Jansa",
      "Jian Yu",
      "Abdullah Gül",
      "Jakaya Mrisho Kikwete"
    ],
    "evaluation": {
      "precision": 0.05263157894736842,
      "recall": 0.5,
      "f1": 0.09523809523809525,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 9.642759799957275
  },
  {
    "quid": 2000018,
    "question": "In which month did Xi Jinping praise the Bahamas?",
    "ground_truth": [
      "2015-01"
    ],
    "analysis": {
      "question_type": "time_query",
      "key_entities": [
        "Xi Jinping",
        "the Bahamas"
      ],
      "target_relations": [
        "praise"
      ],
      "time_constraints": "",
      "answer_type": "time",
      "query_strategy": "首先识别出关键实体'Xi Jinping'和'the Bahamas'，以及目标关系'praise'。问题询问的是这一事件发生的月份，因此需要在时序知识图谱中查询'Xi Jinping'与'the Bahamas'之间存在'praise'关系的具体时间，并提取出月份信息作为答案。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    try:\n        entities = ['Xi Jinping', 'the Bahamas']\n        target_relations = ['Make_a_visit']\n        \n        results = []\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 对于\"first time\"类型的查询，需要找到特定关系的最早记录\n        if len(entities) >= 2:\n            entity1, entity2 = entities[0], entities[1]\n            \n            # 尝试多种实体名称格式\n            entity1_patterns = [entity1, entity1.replace(' ', '_'), entity1.replace('_', ' ')]\n            entity2_patterns = [entity2, entity2.replace(' ', '_'), entity2.replace('_', ' ')]\n            \n            for e1_pattern in entity1_patterns:\n                for e2_pattern in entity2_patterns:\n                    # 查找 entity1 -> relation -> entity2 的记录\n                    mask = (\n                        (df['head'].str.contains(e1_pattern, case=False, na=False)) &\n                        (df['tail'].str.contains(e2_pattern, case=False, na=False)) &\n                        (df['relation'].isin(target_relations))\n                    )\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            year = row['timestamp'][:4]\n                            results.append(year)\n        \n        # 返回最早的年份\n        if results:\n            earliest_year = min(results)\n            return [earliest_year]\n        else:\n            return []\n            \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [],
    "evaluation": {
      "precision": 0,
      "recall": 0.0,
      "f1": 0,
      "exact_match": false,
      "intersection_count": 0
    },
    "process_time": 12.075056791305542
  },
  {
    "quid": 2000019,
    "question": "When did Iran last express its intention to meet with international governmental organisations?",
    "ground_truth": [
      "2006-05-27"
    ],
    "analysis": {
      "question_type": "time_query",
      "key_entities": [
        "Iran",
        "international governmental organisations"
      ],
      "target_relations": [
        "express intention to meet"
      ],
      "time_constraints": "last",
      "answer_type": "time",
      "query_strategy": "查询策略应首先定位实体'Iran'和'international governmental organisations'之间的关系'express intention to meet'，然后筛选出最近的时间点作为答案。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    try:\n        entities = ['Iran', 'international governmental organisations']\n        target_relations = ['Make_a_visit']\n        \n        results = []\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 对于\"first time\"类型的查询，需要找到特定关系的最早记录\n        if len(entities) >= 2:\n            entity1, entity2 = entities[0], entities[1]\n            \n            # 尝试多种实体名称格式\n            entity1_patterns = [entity1, entity1.replace(' ', '_'), entity1.replace('_', ' ')]\n            entity2_patterns = [entity2, entity2.replace(' ', '_'), entity2.replace('_', ' ')]\n            \n            for e1_pattern in entity1_patterns:\n                for e2_pattern in entity2_patterns:\n                    # 查找 entity1 -> relation -> entity2 的记录\n                    mask = (\n                        (df['head'].str.contains(e1_pattern, case=False, na=False)) &\n                        (df['tail'].str.contains(e2_pattern, case=False, na=False)) &\n                        (df['relation'].isin(target_relations))\n                    )\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            year = row['timestamp'][:4]\n                            results.append(year)\n        \n        # 返回最早的年份\n        if results:\n            earliest_year = min(results)\n            return [earliest_year]\n        else:\n            return []\n            \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [],
    "evaluation": {
      "precision": 0,
      "recall": 0.0,
      "f1": 0,
      "exact_match": false,
      "intersection_count": 0
    },
    "process_time": 10.808257818222046
  },
  {
    "quid": 2000020,
    "question": "In which country did Colombia release people before 23 February 2008?",
    "ground_truth": [
      "Guerrilla (Colombia)"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Colombia"
      ],
      "target_relations": [
        "release people"
      ],
      "time_constraints": "before 23 February 2008",
      "answer_type": "entity",
      "query_strategy": "首先识别出关键实体'Colombia'和目标关系'release people'，然后应用时间约束'before 23 February 2008'来筛选符合条件的国家。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Colombia']\n        time_constraint = \"before 23 February 2008\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Armed Band (Spain)",
      "Head of Government (Peru)",
      "Jaroslav Palas",
      "Rodrigo Rato",
      "Party Member (Brazil)",
      "Associated Press",
      "Daniel Scioli",
      "Terrorist (Irish Republican Army)",
      "Alberto Gonzales",
      "José Miguel Insulza",
      "Military (Guatemala)",
      "Ireland",
      "Pervez Musharraf",
      "Head of Government (Brazil)",
      "Foreign Affairs (France)",
      "Evo Morales",
      "France",
      "Jorge Briz Abularach",
      "Sher Bahadur Deuba",
      "Media Personnel (International)",
      "Head of Government (Cuba)",
      "Nonaligned Movement",
      "Mwai Kibaki",
      "Manuel Rosales",
      "Álvaro García",
      "Bolivia",
      "Rafael Correa",
      "Peter Pace",
      "Mexico",
      "National Action Party",
      "Congress (United States)",
      "Government (Ecuador)",
      "Head of Government (Germany)",
      "Royal Administration (Spain)",
      "Sérgio de Oliveira Cabral Santos Filho",
      "China",
      "Al Gore",
      "Dominican Republic",
      "Ministry (Venezuela)",
      "Alvaro Leyva",
      "Mahmoud Ahmadinejad",
      "Iran",
      "Embraer",
      "Raúl Castro",
      "Marco Aurélio Garcia",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Foreign Affairs (Venezuela)",
      "Fernando Berrocal",
      "Ingrid Betancourt Pulecio",
      "Bill Richardson",
      "Oscar Ortiz",
      "Nelson Azevedo Jobim",
      "Angela Merkel",
      "Javier Solana",
      "Government (Germany)",
      "Military (Ecuador)",
      "Barack Obama",
      "Xi Jinping",
      "Diego Borja",
      "Philip Alston",
      "Carlos M. Hernández López",
      "Special Rapporteurs of the United Nations",
      "Gustavo Márquez",
      "Grand National Party",
      "Foreign Affairs (Italy)",
      "Wu Aiying",
      "María Ángela Holguín",
      "Abdullah Gül",
      "Lawyer/Attorney (United States)",
      "Rodrigo Rivera Salazar",
      "Walid Makled",
      "Military Personnel (Peru)",
      "Mahmoud Abbas",
      "Wendy Sherman",
      "UN Security Council",
      "Head of Government (Chile)",
      "Portia Simpson Miller",
      "Cristina Fernández de Kirchner",
      "Lee Myung Bak",
      "Head of Government (South Korea)",
      "Christine Lagarde",
      "Head of Government (Guatemala)",
      "Agence France-Presse",
      "World Organization Against Torture",
      "John Dramani Mahama",
      "Human Rights Watch",
      "Juan Carlos Pinzon",
      "Alan Purisima",
      "Andrej Kiska",
      "Chuck Hagel",
      "Ruben Dario Alzate",
      "Zhang Dejiang",
      "Governor General (Canada)",
      "Ted Poe",
      "Leopoldo López",
      "Vietnam",
      "High Commission for Refugees",
      "Foreign Affairs (Argentina)",
      "Luis de Almagro",
      "Loretta Lynch",
      "Majid Takht Ravanchi",
      "Japan",
      "South Africa",
      "Guatemala",
      "Daniel Ortega",
      "Benedict XVI",
      "Citizen (Brazil)",
      "Office of the United Nations High Commissioner for Human Rights",
      "Solomon Passy",
      "Cyril Svoboda",
      "Colombia",
      "Camilo Reyes Rodríguez",
      "Head of Government (Colombia)",
      "National Liberation Army",
      "Domestic Affairs (Colombia)",
      "Member of Legislative (Govt) (South Korea)",
      "Guerrilla (Cuba)",
      "Citizen (Venezuela)",
      "Mario Uribe Escobar",
      "Citizen (International)",
      "Government (France)",
      "Middle East",
      "Sander Levin",
      "Lawmaker (Colombia)",
      "South Korea",
      "Gabriel Silva Luján",
      "Citizen (Australia)",
      "Liu Yandong",
      "Ronald Kirk",
      "Police (Indonesia)",
      "Attorney General (Ecuador)",
      "Envoy (France)",
      "Media Personnel (Colombia)",
      "Chongwadai",
      "Elmar Mammadyarov",
      "Guerrilla (Colombia)",
      "Chen Deming",
      "Yoani Sánchez",
      "Head of Government (Qatar)",
      "Head of Government (Uruguay)",
      "Indigenous People (Taiwan)",
      "Benjamin Netanyahu",
      "Defense / Security Ministry (Colombia)",
      "Rafael Ramírez",
      "Heraldo Muñoz"
    ],
    "evaluation": {
      "precision": 0.006896551724137931,
      "recall": 1.0,
      "f1": 0.0136986301369863,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 9.288556337356567
  },
  {
    "quid": 2000021,
    "question": "Who was the first country to express optimism about Barack Obama after Ireland?",
    "ground_truth": [
      "Angela Merkel"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Ireland",
        "Barack Obama"
      ],
      "target_relations": [
        "express optimism about"
      ],
      "time_constraints": "after Ireland",
      "answer_type": "entity",
      "query_strategy": "首先找到Ireland对Barack Obama表达乐观态度的具体时间点，然后查询在该时间点之后，第一个对Barack Obama表达乐观态度的国家。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Ireland', 'Barack Obama']\n        time_constraint = \"after Ireland\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Wen Jiabao",
      "Emperor Akihito",
      "Japan",
      "Media Personnel (Japan)",
      "Congress (United States)",
      "Bertie Ahern",
      "Elizabeth II",
      "USS Nimitz",
      "Tony Blair",
      "Borys Tarasyuk",
      "Naval (United Kingdom)",
      "Ma Ying Jeou",
      "Head of Government (Greece)",
      "John O'Donoghue",
      "Activist (United States)",
      "Anna Fotyga",
      "News Editor (Israel)",
      "City Mayor (United States)",
      "Harald V",
      "Tourist (United States)",
      "Yegor Timurovich Gaidar",
      "Ivan Gasparovic",
      "United Arab Emirates",
      "Student (Switzerland)",
      "Ian Paisley",
      "Valdas Adamkus",
      "Angela Merkel",
      "Toomas Hendrik Ilves",
      "Yasuo Fukuda",
      "Mwai Kibaki",
      "Businessperson (United Kingdom)",
      "Foreign Affairs (France)",
      "France",
      "Mahmoud Abbas",
      "Kemal Unakitan",
      "Barack Obama",
      "Dmitry Nikolayevich Kozak",
      "Vietnam",
      "Tran Van Tuan",
      "Charles Haughey",
      "Abdul Kalam",
      "Moro Islamic Liberation Front",
      "Detainee (United States)",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "John Gormley",
      "Bolivia",
      "John Paul II",
      "Grigol Vashadze",
      "Citizen (Australia)",
      "China",
      "Scientist (France)",
      "International Monetary Fund",
      "Royal Administration (Ireland)",
      "Nabil Shaath",
      "Benedict XVI",
      "Xi Jinping",
      "Media Personnel (International)",
      "Irakli Alasania",
      "Foreign Affairs (Romania)",
      "Deval Patrick",
      "Jerry Brown",
      "Daniel Ortega",
      "European Central Bank",
      "Alexis Tsipras",
      "Iran",
      "Northern Ireland",
      "David Narmania",
      "Joan Burton",
      "Dzintars Rasnacs",
      "Joachim Gauck",
      "Arseniy Yatsenyuk",
      "Head of Government (India)",
      "South Korea",
      "Colombia",
      "Iraq",
      "Ethiopia",
      "Romania",
      "South Africa",
      "Luka Bebic",
      "Sudan",
      "Laos",
      "Ireland",
      "Citizen (United Kingdom)",
      "Dominican Republic",
      "Presidential Family (Ireland)",
      "Kuomintang",
      "Zurab Nogaideli",
      "Party Member (Ireland)",
      "Women (Ukraine)",
      "Al Gore",
      "Mexico",
      "Ministry (Sudan)",
      "Treasury/Finance Ministry (Germany)",
      "Elmar Mammadyarov",
      "Herman Van Rompuy",
      "Christine Lagarde",
      "Antonis Samaras"
    ],
    "evaluation": {
      "precision": 0.010309278350515464,
      "recall": 1.0,
      "f1": 0.020408163265306124,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 9.61880874633789
  },
  {
    "quid": 2000022,
    "question": "Which was the first country to praise Colombia after Cristina Fernández de Kirchner?",
    "ground_truth": [
      "Barack Obama"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Colombia",
        "Cristina Fernández de Kirchner"
      ],
      "target_relations": [
        "praise"
      ],
      "time_constraints": "after Cirstina Fernández de Kirchner",
      "answer_type": "entity",
      "query_strategy": "1. Identify the time when Cristina Fernández de Kirchner was active. 2. Find the first country that praised Colombia after that time."
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Colombia', 'Cristina Fernández de Kirchner']\n        time_constraint = \"after Cirstina Fernández de Kirchner\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Armed Band (Spain)",
      "Head of Government (Peru)",
      "Jaroslav Palas",
      "Rodrigo Rato",
      "Party Member (Brazil)",
      "Associated Press",
      "Daniel Scioli",
      "Terrorist (Irish Republican Army)",
      "Alberto Gonzales",
      "José Miguel Insulza",
      "Military (Guatemala)",
      "Ireland",
      "Pervez Musharraf",
      "Head of Government (Brazil)",
      "Foreign Affairs (France)",
      "Evo Morales",
      "France",
      "Jorge Briz Abularach",
      "Sher Bahadur Deuba",
      "Media Personnel (International)",
      "Head of Government (Cuba)",
      "Nonaligned Movement",
      "Mwai Kibaki",
      "Manuel Rosales",
      "Álvaro García",
      "Bolivia",
      "Rafael Correa",
      "Peter Pace",
      "Mexico",
      "National Action Party",
      "Congress (United States)",
      "Government (Ecuador)",
      "Head of Government (Germany)",
      "Royal Administration (Spain)",
      "Sérgio de Oliveira Cabral Santos Filho",
      "China",
      "Al Gore",
      "Dominican Republic",
      "Ministry (Venezuela)",
      "Alvaro Leyva",
      "Mahmoud Ahmadinejad",
      "Iran",
      "Embraer",
      "Raúl Castro",
      "Marco Aurélio Garcia",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Foreign Affairs (Venezuela)",
      "Fernando Berrocal",
      "Ingrid Betancourt Pulecio",
      "Bill Richardson",
      "Oscar Ortiz",
      "Nelson Azevedo Jobim",
      "Angela Merkel",
      "Javier Solana",
      "Government (Germany)",
      "Military (Ecuador)",
      "Barack Obama",
      "Xi Jinping",
      "Diego Borja",
      "Philip Alston",
      "Carlos M. Hernández López",
      "Special Rapporteurs of the United Nations",
      "Gustavo Márquez",
      "Grand National Party",
      "Foreign Affairs (Italy)",
      "Wu Aiying",
      "María Ángela Holguín",
      "Abdullah Gül",
      "Lawyer/Attorney (United States)",
      "Rodrigo Rivera Salazar",
      "Walid Makled",
      "Military Personnel (Peru)",
      "Mahmoud Abbas",
      "Wendy Sherman",
      "UN Security Council",
      "Head of Government (Chile)",
      "Portia Simpson Miller",
      "Cristina Fernández de Kirchner",
      "Lee Myung Bak",
      "Head of Government (South Korea)",
      "Christine Lagarde",
      "Head of Government (Guatemala)",
      "Agence France-Presse",
      "World Organization Against Torture",
      "John Dramani Mahama",
      "Human Rights Watch",
      "Juan Carlos Pinzon",
      "Alan Purisima",
      "Andrej Kiska",
      "Chuck Hagel",
      "Ruben Dario Alzate",
      "Zhang Dejiang",
      "Governor General (Canada)",
      "Ted Poe",
      "Leopoldo López",
      "Vietnam",
      "High Commission for Refugees",
      "Foreign Affairs (Argentina)",
      "Luis de Almagro",
      "Loretta Lynch",
      "Majid Takht Ravanchi",
      "Japan",
      "South Africa",
      "Guatemala",
      "Daniel Ortega",
      "Benedict XVI",
      "Citizen (Brazil)",
      "Office of the United Nations High Commissioner for Human Rights",
      "Solomon Passy",
      "Cyril Svoboda",
      "Colombia",
      "Camilo Reyes Rodríguez",
      "Head of Government (Colombia)",
      "National Liberation Army",
      "Domestic Affairs (Colombia)",
      "Member of Legislative (Govt) (South Korea)",
      "Guerrilla (Cuba)",
      "Citizen (Venezuela)",
      "Mario Uribe Escobar",
      "Citizen (International)",
      "Government (France)",
      "Middle East",
      "Sander Levin",
      "Lawmaker (Colombia)",
      "South Korea",
      "Gabriel Silva Luján",
      "Citizen (Australia)",
      "Liu Yandong",
      "Ronald Kirk",
      "Police (Indonesia)",
      "Attorney General (Ecuador)",
      "Envoy (France)",
      "Media Personnel (Colombia)",
      "Chongwadai",
      "Elmar Mammadyarov",
      "Guerrilla (Colombia)",
      "Chen Deming",
      "Yoani Sánchez",
      "Head of Government (Qatar)",
      "Head of Government (Uruguay)",
      "Indigenous People (Taiwan)",
      "Benjamin Netanyahu",
      "Defense / Security Ministry (Colombia)",
      "Rafael Ramírez",
      "Heraldo Muñoz"
    ],
    "evaluation": {
      "precision": 0.006896551724137931,
      "recall": 1.0,
      "f1": 0.0136986301369863,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 9.683708906173706
  },
  {
    "quid": 2000023,
    "question": "Which country hosted the visit of Frank Bainimarama after Vanuatu?",
    "ground_truth": [
      "China"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Frank Bainimarama",
        "Vanuatu"
      ],
      "target_relations": [
        "hosted the visit"
      ],
      "time_constraints": "after Vanuatu",
      "answer_type": "entity",
      "query_strategy": "首先确定Frank Bainimarama在访问Vanuatu之后访问的国家，需要查询时序知识图谱中Frank Bainimarama的访问记录，并按时间顺序筛选出在Vanuatu之后的访问记录，然后提取访问的国家信息。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Frank Bainimarama', 'Vanuatu']\n        time_constraint = \"after Vanuatu\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Middle East",
      "Congress (United States)",
      "South Korea",
      "United Arab Emirates",
      "Vanuatu",
      "China",
      "Prime Minister Qarase",
      "Winston Peters",
      "Government Official (Fiji)",
      "Julie Bishop",
      "Xi Jinping"
    ],
    "evaluation": {
      "precision": 0.09090909090909091,
      "recall": 1.0,
      "f1": 0.16666666666666669,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 9.908650636672974
  },
  {
    "quid": 2000024,
    "question": "Who asked for Japan in October 2005?",
    "ground_truth": [
      "Wang Yi",
      "Donald Rumsfeld",
      "Finance / Economy / Commerce / Trade Ministry (New Zealand)",
      "Robert Jones Portman",
      "China",
      "Iraq"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Japan"
      ],
      "target_relations": [
        "asked for"
      ],
      "time_constraints": "October 2005",
      "answer_type": "entity",
      "query_strategy": "首先在时序知识图谱中查找与'Japan'相关的实体，然后筛选出在2005年10月发生的关系'asked for'，最后返回该关系中的主体实体。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Japan']\n        time_constraint = \"October 2005\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Jack Straw",
      "Ho Mei-yueh",
      "Henry Tang",
      "Kim Jong Pil",
      "UN Security Council",
      "George Yeo",
      "Mahmoud Abbas",
      "Doctors Without Borders",
      "Rafiq Hariri",
      "China",
      "Iran",
      "Ma Ying Jeou",
      "Transport (South Korea)",
      "Energy Department/Ministry (Russia)",
      "Alberto Fujimori",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Roh Moo Hyun",
      "Ali Abdullah Saleh",
      "Lien Chan",
      "Head of Government (Colombia)",
      "Student (Laos)",
      "Mitsubishi",
      "Party Member (Taiwan)",
      "South Korea",
      "Gazprom",
      "Envoy (United States)",
      "Foreign Affairs (South Korea)",
      "City Mayor (Australia)",
      "Head of Government (Finland)",
      "Head of Government (Portugal)",
      "Mikulas Dzurinda",
      "Mikhail Sergeyevich Gorbachev",
      "Wen Jiabao",
      "Chung Dong-young",
      "Head of Government (Brazil)",
      "Head of Government (Germany)",
      "Kuomintang",
      "Royal Administration (Spain)",
      "Sheikh Hamad bin Khalifa al-Thani",
      "Indigenous People (Taiwan)",
      "Franklin Drilon",
      "Congress (Peru)",
      "Prime Minister Qarase",
      "Emperor Akihito",
      "Head of Government (Bangladesh)",
      "Admiral (Russia)",
      "Head of Government (Palau)",
      "Head of Government (Pakistan)",
      "Head of Government (Ukraine)",
      "Vietnam",
      "Shaukat Aziz",
      "Student (Palestinian Territory, Occupied)",
      "Media (United States)",
      "Ryutaro Hashimoto",
      "Elizabeth II",
      "Member of Parliament (Thailand)",
      "Benjamin Netanyahu",
      "Okada Katsuya",
      "Immigrants (Peru)",
      "Student (Bangladesh)",
      "Donald Rumsfeld",
      "Wang Yi",
      "Bill Richardson",
      "Undersecretary (United States)",
      "Chongwadai",
      "Head of Government (Greece)",
      "Chu Tuan Nha",
      "Special Rapporteurs of the United Nations",
      "Mikhail Yefimovich Fradkov",
      "Foreign Affairs (Romania)",
      "Muhammad VI",
      "Iraq",
      "Ante Gotovina",
      "Yasuo Fukuda",
      "Jusuf Kalla",
      "Energy Department/Ministry (United States)",
      "Head of Government (South Korea)",
      "Sergey Kuzhugetovich Shoygu",
      "Aigars Kalvitis",
      "Francis J. Harvey",
      "Head of Government (Mongolia)",
      "Joon Young Woo",
      "Saud bin Faisal bin Abdul-Aziz",
      "Kim Kye Gwan",
      "Royal Administration (Saudi Arabia)",
      "Naval (United States)",
      "Tamisuke Watanuki",
      "Wolfgang Schüssel",
      "Sali Berisha",
      "Grand National Party",
      "International Monetary Fund",
      "Business (Iran)",
      "Winston Peters",
      "Elyor Ganiyev",
      "Ahmad bin Abdul-Nabi Mekki",
      "James Wolfensohn",
      "Thailand",
      "William J. Fallon",
      "Military Personnel (Taiwan)",
      "High Ranking Military Personnel (Taiwan)",
      "Cambodia",
      "Laos",
      "Oluṣẹgun Ọbasanjọ",
      "Chuck Hagel",
      "Jakaya Mrisho Kikwete",
      "Elmar Mammadyarov",
      "Head of Government (Ghana)",
      "Head of Government (India)",
      "Alexander Valterovich Litvinenko",
      "Government (Palestinian Territory, Occupied)",
      "Council of Representatives",
      "Tzipi Livni",
      "City Mayor (China)",
      "Henry M. Paulson",
      "Attack Craft (United States)",
      "Sergey Vladilenovich Kiriyenko",
      "Russian Union of Industrialists and Entrepreneurs",
      "Evo Morales",
      "Shimon Peres",
      "Legislature (Iraq)",
      "Planning Commission (India)",
      "Party Member (Iraq)",
      "Jason C. Hu",
      "Military Personnel (South Korea)",
      "Nuri al-Maliki",
      "Monastery (China)",
      "Japan Red Army",
      "Information / Communication / Transparency Ministry (Angola)",
      "Angela Merkel",
      "Foreign Affairs (Malaysia)",
      "Head of Government (Taiwan)",
      "Dissident (China)",
      "Activist (United States)",
      "Linda Lingle",
      "Sanae Takaichi",
      "Tony Blair",
      "Head of Government (Chile)",
      "Lee Myung Bak",
      "Royal Air Force",
      "A.S.S. Hannan Shah",
      "Assemblies (Cambodia)",
      "Defense / Security Ministry (United States)",
      "Islam Karimov",
      "Taiwan Affairs Office",
      "High Commission for Refugees",
      "Armed Separatist (China)",
      "Association of Southeast Asian Nations",
      "United Arab Emirates",
      "Dmitry Anatolyevich Medvedev",
      "Benazir Bhutto",
      "Member of Legislative (Govt) (South Korea)",
      "Army Chief of Staff (United States)",
      "Mehmet Simsek",
      "International Government Organizations",
      "Christine Lagarde",
      "Shigeru Ishiba",
      "Sudan",
      "Military (Russia)",
      "Janez Jansa",
      "Abdul-Karim Al-Arhabi",
      "Xi Jinping",
      "Abdullah Gül",
      "Sergei Ivanovich Shmatkó",
      "Foreign Affairs (France)",
      "Chris Evans",
      "A.K. Antony",
      "Mexico",
      "South Africa",
      "Foreign Affairs (India)",
      "Boris Vyacheslavovich Gryzlov",
      "Kaoru Yosano",
      "Scientist (Russia)",
      "Representatives (Russia)",
      "Radoslaw Sikorski",
      "Maxime Verhagen",
      "Barack Obama",
      "Juan Carlos I",
      "Media Personnel (Iran)",
      "Abhisit Vejjajiva",
      "Grigol Vashadze",
      "Stephen W. Bosworth",
      "Company - Owner or Operator (Kyrgyzstan)",
      "Martin Bursík",
      "Representatives (Kyrgyzstan)",
      "Samsung",
      "Tsai Ing-wen",
      "Rafael Ramírez",
      "Nasser Judeh",
      "Ministry (Iran)",
      "Lawrence Cannon",
      "Gary Roughead",
      "Miguel d' Escoto Brockmann",
      "City Mayor (United States)",
      "Lawyer/Attorney (United States)",
      "USS Nimitz",
      "Anupong Paochinda",
      "Bhutan",
      "Jack Lang",
      "Vuk Jeremić",
      "Joint Chiefs of Staff (United States)",
      "Head of Government (Turkmenistan)",
      "Ministry (South Korea)",
      "Bruno Stagno Ugarte",
      "Member of Legislative (Govt) (Iran)",
      "Aladdin Boroujerdi",
      "City Mayor (New Zealand)",
      "Ministry (Mainland Affairs Council)",
      "Julie Bishop",
      "Cabinet / Council of Ministers / Advisors (Kazakhstan)",
      "Benjamin William Mkapa",
      "Herman Van Rompuy",
      "Foreign Affairs (Israel)",
      "John Faulkner",
      "Finance / Economy / Commerce / Trade Ministry (Australia)",
      "Secret Agent (South Korea)",
      "Sengoku Yoshito",
      "Rafael Correa",
      "Tim Pawlenty",
      "Kazuhiro Haraguchi",
      "Abu Bakr Abdullah al-Qirbi",
      "Tsakhiagiyn Elbegdorj",
      "Boediono",
      "Media Personnel (International)",
      "Presidential Family (Mongolia)",
      "Igor Ivanovich Shuvalov",
      "Ismaïl Omar Guelleh",
      "Philip J. Crowley",
      "Sadako Ogata",
      "Jens Stoltenberg",
      "Head of Government (Bahrain)",
      "Israeli Defense Forces",
      "Employee (Israel)",
      "France",
      "Transport (China)",
      "Julia Gillard",
      "Takeaki Matsumoto",
      "Agustín Carstens",
      "Democratic Party",
      "Noppadon Pattama",
      "Yoshihiko Noda",
      "Yasuo Ichikawa",
      "Bev Perdue",
      "Central Intelligence Agency",
      "Finance / Economy / Commerce / Trade Ministry (Russia)",
      "Wendy Sherman",
      "Jetsun Pema Wangchuck",
      "Foreign Affairs (Kosovo)",
      "Foreign Affairs (Zambia)",
      "Kittiratt Na-Ranong",
      "Foreign Affairs (Nepal)",
      "Student (Thailand)",
      "Andrius Kubilius",
      "Eric Besson",
      "Kuwait",
      "Samuel J. Locklear",
      "Norodom Sihanouk",
      "Foreign Affairs (Singapore)",
      "Michael Sata",
      "Hamrokhon Zarifi",
      "Angola",
      "Yamamoto Ichita",
      "Indigenous People (United Kingdom)",
      "Ed Royce",
      "Defense / Security Ministry (Estonia)",
      "Valdis Dombrovskis",
      "Ethiopia",
      "Hisham Qandil",
      "William Ruto",
      "Gurbanguly Berdymukhammedov",
      "Pat Quinn",
      "Jacob J. Lew",
      "People First Party Korea",
      "Christian Noyer",
      "Nadine Heredia",
      "Oman",
      "Irakli Alasania",
      "Toomas Hendrik Ilves",
      "Andrew Robb",
      "Hashim Thaçi",
      "Malaysia",
      "Moro Islamic Liberation Front",
      "Citizen (North Korea)",
      "Rose Gottemoeller",
      "David Shear",
      "Ministry of Tourism (Croatia)",
      "Suh Chung-won",
      "Governor (South Korea)",
      "Health Ministry (Iran)",
      "Thongsing Thammavong",
      "Presidential Family (United States)",
      "Ricardo Cabrisas",
      "Uhuru Muigai Kenyatta",
      "Tan Sri Muhyiddin Yassin",
      "Pedro Manuel Mamede Passos Coelho",
      "Peter O'Neill",
      "Tourist (Southeast Asia)",
      "Nicholas \"Nick\" Xenophon",
      "Pham Binh Minh",
      "Abdel Fattah Al-Sisi",
      "Student (Kenya)",
      "Mogens Lykketoft",
      "Shivraj Singh Chouhan",
      "Austin \"Jack\" Warner",
      "Boris Johnson",
      "Energy Department/Ministry (Iran)",
      "Head of Government (Egypt)",
      "Abdul Hamid",
      "Aceh",
      "Ireland",
      "Businessperson (Laos)",
      "Middle East",
      "Yemen",
      "Romania",
      "Foreign Affairs (Liberia)",
      "Kazakhstan",
      "Somsavat Lengsava",
      "Japan",
      "Sex Trade (China)",
      "Aguinaldo Jaime",
      "Eritrea",
      "Luka Bebic",
      "Treasury/Finance Ministry (Egypt)",
      "Guatemala",
      "The Hague",
      "South Sudan",
      "Northern Ireland",
      "William Kabogo",
      "John Baird",
      "Health Ministry (Russia)",
      "Yury Mikhaylovich Luzhkov",
      "Paramount Ruler Sirajuddin",
      "Representatives (Japan)",
      "Jay Rockefeller",
      "Joe Manchin",
      "Lawmaker (Japan)",
      "National Security Advisor (South Korea)",
      "Royal Administration (Japan)",
      "Military Personnel (Japan)",
      "Donald J. Johnston",
      "Samuel Schmid",
      "Men (United States)",
      "Anguel Marin",
      "Media Personnel (Japan)",
      "Japan Self-Defense Forces",
      "African Union",
      "Valdas Adamkus",
      "Cabinet / Council of Ministers / Advisors (Japan)",
      "Governor (Japan)",
      "High Ranking Military Personnel (Japan)",
      "Citizen (Thailand)",
      "Takeo Nishioka",
      "Police (Israel)",
      "Men (Japan)",
      "Mainland Affairs Council",
      "Hideaki Kobayashi",
      "Government Official (Japan)",
      "Thanong Bidaya",
      "City Mayor (Iraq)",
      "Treasury/Finance Ministry (Japan)",
      "Representative to the United Nations (North Korea)",
      "Javier Solana",
      "Ministry (Brazil)",
      "Charles Murigande",
      "Ministry (Oman)",
      "Ram Paswan",
      "Robert M. Kimmitt",
      "Presidential Family (Japan)",
      "Industry (India)",
      "Rodrigo Rato",
      "Children (Azerbaijan)",
      "Peter Pace",
      "Citizen (Nigeria)",
      "House Speaker (Japan)",
      "Qatar",
      "Qin Gang",
      "Other Authorities / Officials (Russia)",
      "Treasury/Finance Ministry (Germany)",
      "Chen Bingde",
      "Citizen (Sudan)",
      "Foreign Affairs (Portugal)",
      "Citizen (Australia)",
      "Jew (Israel)",
      "Jian Yu",
      "Mahmoud Ahmadinejad",
      "Women / Children / Social / Welfare / Development / Religion Ministry (South Korea)",
      "Mwai Kibaki",
      "Citizen (International)",
      "Umaru Musa Yar'Adua",
      "Citizen (United Kingdom)",
      "Citizen (Bulgaria)",
      "Medical Personnel (Japan)",
      "Ministry (Switzerland)",
      "Finance / Economy / Commerce / Trade Ministry (Japan)",
      "Lockwood Smith",
      "Heinz Fischer",
      "Bill English",
      "Thief (Japan)",
      "Workers' Party (North Korea)",
      "Ben Shalom Bernanke",
      "Citizen (Brazil)",
      "Catherine Ashton",
      "Takahiro Yokomichi",
      "House of Representatives (Japan)",
      "Representatives (France)",
      "Citizen (Zambia)",
      "Finance / Economy / Commerce / Trade Ministry (Vietnam)",
      "Foreign Affairs (Austria)",
      "Citizen (Southeast Asia)",
      "Meira Kumar",
      "Philip Hammond",
      "Employee (Thailand)",
      "Kōichirō Genba",
      "Head of Government (Timor-Leste)",
      "María Ángela Holguín",
      "Mario Monti",
      "International Federation of Red Cross and Red Crescent Societies",
      "Sheikh Hamad bin Isa al Khalifah",
      "Uighur (Japan)",
      "Ivan Gasparovic",
      "State Duma (Japan)",
      "Wang Ching-feng",
      "Vincent C. Siew",
      "United States Senate",
      "Seamen (Russia)",
      "Colombia",
      "Campbell Newman",
      "Royal Administration (Croatia)",
      "Yu Zhengsheng",
      "Special Commission (United Nations)",
      "Finance / Economy / Commerce / Trade Ministry (New Zealand)",
      "Jay Inslee",
      "Portia Simpson Miller",
      "Viktor Orban",
      "Deval Patrick",
      "Raul Hernandez",
      "Solidarity",
      "Abdulla Yameen",
      "Chimed Saikhanbileg",
      "Larry Hogan",
      "Federica Mogherini",
      "Edgars Rinkevics",
      "Kazumi Matsui",
      "John Richardson",
      "Anatoly Antonov",
      "Yoon Sang-jick",
      "Steven Marshall"
    ],
    "evaluation": {
      "precision": 0.011210762331838564,
      "recall": 0.8333333333333334,
      "f1": 0.022123893805309734,
      "exact_match": false,
      "intersection_count": 5
    },
    "process_time": 10.784165859222412
  },
  {
    "quid": 2000025,
    "question": "Which country criticised Colombia after 8 February 2015?",
    "ground_truth": [
      "National Liberation Army"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Colombia"
      ],
      "target_relations": [
        "criticised"
      ],
      "time_constraints": "after 8 February 2015",
      "answer_type": "entity",
      "query_strategy": "Find the country that has the relation 'criticised' with Colombia after the specified date."
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Colombia']\n        time_constraint = \"after 8 February 2015\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Armed Band (Spain)",
      "Head of Government (Peru)",
      "Jaroslav Palas",
      "Rodrigo Rato",
      "Party Member (Brazil)",
      "Associated Press",
      "Daniel Scioli",
      "Terrorist (Irish Republican Army)",
      "Alberto Gonzales",
      "José Miguel Insulza",
      "Military (Guatemala)",
      "Ireland",
      "Pervez Musharraf",
      "Head of Government (Brazil)",
      "Foreign Affairs (France)",
      "Evo Morales",
      "France",
      "Jorge Briz Abularach",
      "Sher Bahadur Deuba",
      "Media Personnel (International)",
      "Head of Government (Cuba)",
      "Nonaligned Movement",
      "Mwai Kibaki",
      "Manuel Rosales",
      "Álvaro García",
      "Bolivia",
      "Rafael Correa",
      "Peter Pace",
      "Mexico",
      "National Action Party",
      "Congress (United States)",
      "Government (Ecuador)",
      "Head of Government (Germany)",
      "Royal Administration (Spain)",
      "Sérgio de Oliveira Cabral Santos Filho",
      "China",
      "Al Gore",
      "Dominican Republic",
      "Ministry (Venezuela)",
      "Alvaro Leyva",
      "Mahmoud Ahmadinejad",
      "Iran",
      "Embraer",
      "Raúl Castro",
      "Marco Aurélio Garcia",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Foreign Affairs (Venezuela)",
      "Fernando Berrocal",
      "Ingrid Betancourt Pulecio",
      "Bill Richardson",
      "Oscar Ortiz",
      "Nelson Azevedo Jobim",
      "Angela Merkel",
      "Javier Solana",
      "Government (Germany)",
      "Military (Ecuador)",
      "Barack Obama",
      "Xi Jinping",
      "Diego Borja",
      "Philip Alston",
      "Carlos M. Hernández López",
      "Special Rapporteurs of the United Nations",
      "Gustavo Márquez",
      "Grand National Party",
      "Foreign Affairs (Italy)",
      "Wu Aiying",
      "María Ángela Holguín",
      "Abdullah Gül",
      "Lawyer/Attorney (United States)",
      "Rodrigo Rivera Salazar",
      "Walid Makled",
      "Military Personnel (Peru)",
      "Mahmoud Abbas",
      "Wendy Sherman",
      "UN Security Council",
      "Head of Government (Chile)",
      "Portia Simpson Miller",
      "Cristina Fernández de Kirchner",
      "Lee Myung Bak",
      "Head of Government (South Korea)",
      "Christine Lagarde",
      "Head of Government (Guatemala)",
      "Agence France-Presse",
      "World Organization Against Torture",
      "John Dramani Mahama",
      "Human Rights Watch",
      "Juan Carlos Pinzon",
      "Alan Purisima",
      "Andrej Kiska",
      "Chuck Hagel",
      "Ruben Dario Alzate",
      "Zhang Dejiang",
      "Governor General (Canada)",
      "Ted Poe",
      "Leopoldo López",
      "Vietnam",
      "High Commission for Refugees",
      "Foreign Affairs (Argentina)",
      "Luis de Almagro",
      "Loretta Lynch",
      "Majid Takht Ravanchi",
      "Japan",
      "South Africa",
      "Guatemala",
      "Daniel Ortega",
      "Benedict XVI",
      "Citizen (Brazil)",
      "Office of the United Nations High Commissioner for Human Rights",
      "Solomon Passy",
      "Cyril Svoboda",
      "Colombia",
      "Camilo Reyes Rodríguez",
      "Head of Government (Colombia)",
      "National Liberation Army",
      "Domestic Affairs (Colombia)",
      "Member of Legislative (Govt) (South Korea)",
      "Guerrilla (Cuba)",
      "Citizen (Venezuela)",
      "Mario Uribe Escobar",
      "Citizen (International)",
      "Government (France)",
      "Middle East",
      "Sander Levin",
      "Lawmaker (Colombia)",
      "South Korea",
      "Gabriel Silva Luján",
      "Citizen (Australia)",
      "Liu Yandong",
      "Ronald Kirk",
      "Police (Indonesia)",
      "Attorney General (Ecuador)",
      "Envoy (France)",
      "Media Personnel (Colombia)",
      "Chongwadai",
      "Elmar Mammadyarov",
      "Guerrilla (Colombia)",
      "Chen Deming",
      "Yoani Sánchez",
      "Head of Government (Qatar)",
      "Head of Government (Uruguay)",
      "Indigenous People (Taiwan)",
      "Benjamin Netanyahu",
      "Defense / Security Ministry (Colombia)",
      "Rafael Ramírez",
      "Heraldo Muñoz"
    ],
    "evaluation": {
      "precision": 0.006896551724137931,
      "recall": 1.0,
      "f1": 0.0136986301369863,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 8.12063217163086
  },
  {
    "quid": 2000026,
    "question": "Before December 9, 2008, who did Timor-Leste request for?",
    "ground_truth": [
      "Malaysia",
      "Portugal",
      "UN Security Council"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Timor-Leste"
      ],
      "target_relations": [
        "request for"
      ],
      "time_constraints": "before December 9, 2008",
      "answer_type": "entity",
      "query_strategy": "查询在2008年12月9日之前，东帝汶(Timor-Leste)所请求的对象。需要先定位到Timor-Leste实体，然后查找在指定时间范围内与该实体存在'request for'关系的其他实体。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Timor-Leste']\n        time_constraint = \"before December 9, 2008\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "UN Security Council",
      "Malaysia",
      "Military (New Zealand)",
      "Portugal",
      "Foreign Affairs (Singapore)",
      "Peacekeeping Troop (Malaysia)",
      "High Commission for Refugees",
      "Military (Singapore)",
      "Media Personnel (Australia)",
      "Associated Press",
      "Envoy (United States)",
      "Head of Government (Portugal)",
      "John Faulkner",
      "George Yeo",
      "Chris Bowen",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Angola",
      "China",
      "Aceh",
      "Jusuf Kalla",
      "Thailand",
      "South Korea",
      "Governor (South Korea)",
      "Association of Southeast Asian Nations",
      "Citizen (Australia)",
      "Peter Costello",
      "Military (Timor-Leste)",
      "Media Personnel (Timor-Leste)",
      "Police (Australia)",
      "Winston Peters",
      "Police (Malaysia)",
      "Jeon Yunchurl",
      "Women (China)",
      "Northern Ireland",
      "Zalmai Rassoul",
      "Julia Gillard"
    ],
    "evaluation": {
      "precision": 0.08333333333333333,
      "recall": 1.0,
      "f1": 0.15384615384615385,
      "exact_match": false,
      "intersection_count": 3
    },
    "process_time": 9.53081202507019
  },
  {
    "quid": 2000028,
    "question": "After 2009-12-3, who received Bolivia's visit from Bolivia?",
    "ground_truth": [
      "Iran",
      "International Court of Justice",
      "Mahmoud Ahmadinejad",
      "Colombia",
      "France",
      "The Hague",
      "Majid Takht Ravanchi"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Bolivia"
      ],
      "target_relations": [
        "received visit from"
      ],
      "time_constraints": "after 2009-12-3",
      "answer_type": "entity",
      "query_strategy": "查询在2009年12月3日之后，玻利维亚（Bolivia）访问了谁。需要先找到玻利维亚在该时间点之后的所有访问事件，然后提取被访问的实体。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Bolivia']\n        time_constraint = \"after 2009-12-3\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Combatant (Argentina)",
      "Mexico",
      "Evo Morales",
      "Eduardo Rodríguez",
      "Head of Government (Peru)",
      "José Miguel Insulza",
      "Head of Government (Colombia)",
      "Head of Government (Cuba)",
      "Oscar Perez",
      "China",
      "Roberto Kobeh González",
      "Protester (India)",
      "Daniel Ortega",
      "Head of Government (Chile)",
      "Rafael Correa",
      "Tourist (United States)",
      "Vivianne Blanlot",
      "Agence France-Presse",
      "Trinidad and Tobago",
      "Refugee (Guatemala)",
      "Iran",
      "Mahmoud Ahmadinejad",
      "Cristina Fernández de Kirchner",
      "Office of the United Nations High Commissioner for Human Rights",
      "Ingrid Betancourt Pulecio",
      "Juan Gabriel Valdés",
      "Raúl Castro",
      "Head of Government (Brazil)",
      "José Ramón Machado Ventura",
      "Representatives (Russia)",
      "Manuel Rodríguez Cuadros",
      "Ministry (Iran)",
      "María Ángela Holguín",
      "Ministry (Venezuela)",
      "France",
      "Foreign Affairs (Venezuela)",
      "Civil Guard",
      "Martin Belaunde Lossio",
      "Heraldo Muñoz",
      "Colombia",
      "Dominican Republic",
      "Ireland",
      "The Hague",
      "International Court of Justice",
      "Majid Takht Ravanchi",
      "Rodrigo Rato",
      "International Monetary Fund",
      "Armando Loaiza",
      "Undersecretary (United States)",
      "Wu Aiying",
      "Brigitte Girardin",
      "Juan Fernando López Aguilar",
      "Military (Bolivia)",
      "Citizen (Venezuela)",
      "South Africa",
      "Nelson Azevedo Jobim",
      "Vuk Jeremić",
      "Citizen (Brazil)",
      "Hui Liangyu",
      "Lee Myung Bak",
      "Guatemala",
      "Bolivia",
      "Heinz Fischer"
    ],
    "evaluation": {
      "precision": 0.1111111111111111,
      "recall": 1.0,
      "f1": 0.19999999999999998,
      "exact_match": false,
      "intersection_count": 7
    },
    "process_time": 10.075129747390747
  },
  {
    "quid": 2000029,
    "question": "After May, 2015, who gave a condemnation to France?",
    "ground_truth": [
      "Iran",
      "Ahmed el-Tayeb",
      "Benjamin Netanyahu",
      "Police (Syria)",
      "Royal Administration (Spain)",
      "Foreign Affairs (Lebanon)",
      "Heinz Fischer",
      "China",
      "Member of Parliament (France)",
      "Other Authorities / Officials (Libya)",
      "Media Personnel (Iran)",
      "Foreign Affairs (France)",
      "Citizen (International)",
      "Citizen (United Kingdom)",
      "Lawmaker (Syria)",
      "Uhuru Muigai Kenyatta",
      "Citizen (Venezuela)"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "France"
      ],
      "target_relations": [
        "gave a condemnation to"
      ],
      "time_constraints": "after May, 2015",
      "answer_type": "entity",
      "query_strategy": "首先在时序知识图谱中查找在2015年5月之后与France存在'gave a condemnation to'关系的实体，然后返回这些实体作为答案。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['France']\n        time_constraint = \"after May, 2015\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "F. James Sensenbrenner Jr.",
      "Interim Leader (Iraq)",
      "Marie-George Buffet",
      "Iraq",
      "Roh Moo Hyun",
      "Rafael Antonio Bielsa",
      "Cape Verde",
      "Azali Assouman",
      "Gnassingbé Eyadéma",
      "Donald Rumsfeld",
      "Member of Parliament (Australia)",
      "Georgios Papandreou",
      "Terje Roed Larsen",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Rafiq Hariri",
      "Kemal Unakitan",
      "Ali Abdullah Saleh",
      "Ingrid Betancourt Pulecio",
      "Royal Administration (Jordan)",
      "Saifur Rahman",
      "Aleksander Kwasniewski",
      "Moana Carcasses Kalosil",
      "Muhammad VI",
      "Gerhard Schröder",
      "Governor (Japan)",
      "Head of Government (Portugal)",
      "Joschka Fischer",
      "Royal Administration (Saudi Arabia)",
      "Shimon Peres",
      "Ismaïl Omar Guelleh",
      "Abdoulaye Wade",
      "Oluṣẹgun Ọbasanjọ",
      "Tony Blair",
      "Businessperson (China)",
      "Ainars Slesers",
      "Admiral (Russia)",
      "Head of Government (Ukraine)",
      "Foreign Affairs (Romania)",
      "Ministry (Iran)",
      "Head of Government (Brazil)",
      "Foreign Affairs (South Africa)",
      "Angela Merkel",
      "Business (Austria)",
      "Head of Government (India)",
      "Henri Konan Bedie",
      "Education Ministry (Saudi Arabia)",
      "Valdas Adamkus",
      "Mahmoud Abbas",
      "Vietnam",
      "Carlos Saul Menem",
      "Government (Haiti)",
      "Legislature (Romania)",
      "UN Security Council",
      "Jack Straw",
      "Head of Government (Cyprus)",
      "Javier Solana",
      "Badr Mishari al-Humaidi",
      "Romania",
      "Boris Vyacheslavovich Gryzlov",
      "Wen Jiabao",
      "Lawmaker (Syria)",
      "Lawmaker (Lebanon)",
      "Media Personnel (Lebanon)",
      "Evo Morales",
      "Head of Government (Egypt)",
      "Japan",
      "Abdel Ilah Al-Khatib",
      "Head of Government (Germany)",
      "African Union",
      "Head of Government (Gabon)",
      "Sali Berisha",
      "Koichiro Matsuura",
      "Activist (United States)",
      "Dominican Republic",
      "Royal Administration (Wallis and Futuna)",
      "Juan Carlos I",
      "Royal Administration (Spain)",
      "Organized Crime (Sicily)",
      "Mikulas Dzurinda",
      "Legislature (Turkey)",
      "Jakaya Mrisho Kikwete",
      "Borys Tarasyuk",
      "Laos",
      "Head of Government (South Korea)",
      "South Korea",
      "Evangelos Meimarakis",
      "Fatmir Mediu",
      "Ministry (Romania)",
      "Adil Abdul-Mahdi",
      "Jason C. Hu",
      "Information / Communication / Transparency Ministry (Russia)",
      "Macky Sall",
      "Head of Government (Cameroon)",
      "Tzipi Livni",
      "Foreign Affairs (Israel)",
      "Government (Africa)",
      "Head of Government (Togo)",
      "Abdullah Gül",
      "Thailand",
      "Pervez Musharraf",
      "Kamaladdin Heydarov",
      "Professor (Turkey)",
      "Al Gore",
      "Activist (Azerbaijan)",
      "UNITA",
      "Royal Administration (Japan)",
      "Emperor Akihito",
      "Ma Ying Jeou",
      "Head of Government (Qatar)",
      "Israeli Defense Forces",
      "Abdul-Karim Al-Arhabi",
      "China",
      "Undersecretary (United States)",
      "Portugal",
      "Cristina Fernández de Kirchner",
      "Banque du Liban",
      "François Bozizé",
      "Nonaligned Movement",
      "Arseniy Yatsenyuk",
      "Abdul Kalam",
      "Foreign Affairs (Venezuela)",
      "Segolene Royal",
      "Other Authorities / Officials (Switzerland)",
      "Hamrokhon Zarifi",
      "Sherali Khayrulloyev",
      "Rebel Commander (Chechen)",
      "Daniel Scioli",
      "Media Personnel (International)",
      "United Front for An Independent, Neutral, Peaceful and Co operative Cambodia",
      "Military Personnel (Libya)",
      "Your Party",
      "Manuel Noriega",
      "Colombia",
      "City Mayor (United States)",
      "Noureddine Zerhouni",
      "Gholamali Haddad Adel",
      "Ministry (Egypt)",
      "Lawyer/Attorney (Chad)",
      "Thongsing Thammavong",
      "José Bové",
      "Seyoum Mesfin",
      "Sergey Vladilenovich Kiriyenko",
      "Foreign Affairs (South Korea)",
      "Janez Jansa",
      "International Government Organizations",
      "Irakli Okruashvili",
      "Adrian Cioroianu",
      "Industry (India)",
      "Head of Government (Colombia)",
      "Nelson Azevedo Jobim",
      "Andrés Velasco",
      "Yasar Yakis",
      "Defense / Security Ministry (Colombia)",
      "Vuk Jeremić",
      "Dissident (China)",
      "Protester (Armenia)",
      "Ivan Gasparovic",
      "Zine El Abidine Ben Ali",
      "Yasuo Fukuda",
      "Criminal (Somalia)",
      "Yemen",
      "Rafael Correa",
      "Sérgio de Oliveira Cabral Santos Filho",
      "Karl Erjavec",
      "Gazprom",
      "Umaru Musa Yar'Adua",
      "Sergey Bagapsh",
      "Elizabeth II",
      "Criminal (Australia)",
      "Barack Obama",
      "Head of Government (Greece)",
      "Justice and Development Party",
      "Sheikh Hamad bin Khalifa al-Thani",
      "Lawyer/Attorney (Germany)",
      "Middle East",
      "International Monetary Fund",
      "Christian Democratic Movement",
      "South Africa",
      "Brice Hortefeux",
      "Freedom",
      "Alexander Stubb",
      "Gurbanguly Berdymukhammedov",
      "Abdoul Aziz Sow",
      "Benedict XVI",
      "Dmitry Anatolyevich Medvedev",
      "Richard Boucher",
      "Intelligence Chief (South Korea)",
      "Ministry (Council of Europe)",
      "Mehmet Simsek",
      "Member of Legislative (Govt) (South Korea)",
      "Madagascar",
      "Guerrilla (Colombia)",
      "Benjamin Netanyahu",
      "Radoslaw Sikorski",
      "Medical Personnel (Japan)",
      "Envoy (United States)",
      "Mihai Stanisoara",
      "Foreign Affairs (Slovakia)",
      "Chang Song Taek",
      "Karim Wade",
      "Popular Congress",
      "Sudan",
      "Eric Besson",
      "Nuri al-Maliki",
      "Charles Koffi Diby",
      "Mahmoud Ahmadinejad",
      "Media Personnel (Gabon)",
      "Election Commission (India)",
      "Mohamed Ben Omar",
      "Ali Muhammad Mujawar",
      "Indigenous People (Sri Lanka)",
      "Council of Representatives",
      "National Front Malaysia",
      "Asylum Seeker (Afghanistan)",
      "Chen Deming",
      "Ali Bongo Ondimba",
      "Karl-Theodor zu Guttenberg",
      "Ministry (Senegal)",
      "Grigol Vashadze",
      "Alain Joyandet",
      "Head of Government (Turkmenistan)",
      "Seyran Ohanyan",
      "Head of Government (Chad)",
      "Foreign Affairs (Belarus)",
      "Civil Aviation Authority",
      "Paya",
      "Nasser Judeh",
      "Foreign Affairs (Mauritania)",
      "Malawi",
      "Massoud Barzani",
      "Mohamed Ould Abdel Aziz",
      "Julia Gillard",
      "Mauritania",
      "Saud bin Faisal bin Abdul-Aziz",
      "Secret Agent (Russia)",
      "Head of Government (Pakistan)",
      "Benazir Bhutto",
      "Industrial / Textiles / Mining Ministry (Vietnam)",
      "Mohammed Qasim Fahim",
      "Yoon Jeung Hyun",
      "Presidential Family (Turkey)",
      "Head of Government (Chile)",
      "Nabih Berri",
      "Madické Niang",
      "Elias Murr",
      "Ministry (Tunisia)",
      "Abu Bakr Abdullah al-Qirbi",
      "Nabil Shaath",
      "Roza Otunbayeva",
      "Qatar",
      "United Arab Emirates",
      "Intelligence (Egypt)",
      "Soumeylou Boubèye Maiga",
      "Lee Myung Bak",
      "Mahmoud Jibril",
      "National Transitional Council",
      "Manlio Fabio Beltrones",
      "Kim Hwang Sik",
      "New Democracy",
      "Military (Russia)",
      "Treasury/Finance Ministry (Japan)",
      "Dmitry Olegovich Rogozin",
      "Bank (China)",
      "Intelligence (Rwanda)",
      "Kazakhstan",
      "Andrius Kubilius",
      "Foreign Affairs (Uruguay)",
      "Mario Monti",
      "Student (Palestinian Territory, Occupied)",
      "Rebel Commander (Rwanda)",
      "Tsakhiagiyn Elbegdorj",
      "Foreign Affairs (Italy)",
      "Mustafa Tlass",
      "Nhial Deng Nhial",
      "Energy Department/Ministry (Iran)",
      "Claude Guéant",
      "Mehdi Karrubi",
      "Alexis Tsipras",
      "Party Member (Ireland)",
      "High Ranking Military Personnel (Syria)",
      "Elmar Mammadyarov",
      "Antonis Samaras",
      "Moussa Dadis Camara",
      "Armed Gang (Al Qaeda)",
      "Augustin Matata Ponyo",
      "Military (Lebanon)",
      "Businessperson (Czech Republic)",
      "Valdis Dombrovskis",
      "Bloc Yulia Tymoshenko",
      "Christine Lagarde",
      "Union des Forces Démocratiques de Guinée",
      "Head of Government (Ghana)",
      "Nicos Anastasiades",
      "Irakli Alasania",
      "Bandar bin Sultan",
      "Chuck Hagel",
      "Joachim Gauck",
      "Serik Akhmetov",
      "Ibrahim Boubacar Keïta",
      "Wang Yi",
      "Algirdas Butkevičius",
      "Iain Duncan Smith",
      "Ramtane Lamamra",
      "Axel Kicillof",
      "Dimitris Kourkoulas",
      "Transport (Spain)",
      "Xi Jinping",
      "Nathalie Kosciusko-Morizet",
      "Envoy (Eritrea)",
      "Raúl Castro",
      "French Communist Party",
      "Tanzania",
      "Leopoldo López",
      "Yannis Stournaras",
      "Iran",
      "Luis de Almagro",
      "International Federation of Human Rights",
      "Taavi Rõivas",
      "National Security Advisor (Georgia)",
      "Indigenous People (United Kingdom)",
      "Future Movement",
      "Shrien Dewani",
      "Thomas Dandois",
      "Abdel Fattah Al-Sisi",
      "Government Official (Greece)",
      "John Paul II",
      "Military Academy (United States)",
      "Tourist (Malaysia)",
      "Theresa May",
      "Viktor Orban",
      "Foreign Affairs (Singapore)",
      "Douglas Alexander",
      "Klaus Johannis",
      "Alexei Pushkov",
      "Staffan de Mistura",
      "Andreas Lubitz",
      "Nicolas Schmit",
      "Tony Tan Keng Yam",
      "Julie Bishop",
      "Farhan Haq",
      "Muhammad Salem al-Ghabban",
      "Domestic Affairs (Germany)",
      "Sedki Sobhi",
      "Rose Gottemoeller",
      "Miguel Ángel Osorio Chong",
      "Ministry (Zimbabwe)",
      "Education Ministry (Taiwan)",
      "Chancellor of the Exchequer",
      "Immigrants (Middle East)",
      "High Commission for Refugees",
      "Sheikh Hamad bin Isa al Khalifah",
      "Togo",
      "Muhammadu Buhari",
      "Head of Government (Nigeria)",
      "Godwin Emefiele",
      "John Dramani Mahama",
      "Mayotte",
      "Edgars Rinkevics",
      "Student (Spain)",
      "Jan Jambon",
      "Businessperson (Italy)",
      "Abdullah bin Nasser bin Khalifa Al-Thani",
      "Len Brown",
      "Bolivia",
      "Jay Inslee",
      "Rahm Israel Emanuel",
      "Stephen Williams",
      "Member of Legislative (Govt) (Lebanon)",
      "Military (Jordan)",
      "Qutbi Al-Mahdi",
      "Head of Government (Mongolia)",
      "Mexico",
      "Cambodia",
      "Abdullah ibn Husayn al-Ahmar",
      "Brownie Samukai",
      "Rudy Giuliani",
      "Kuwait",
      "Angola",
      "Charles Rabemananjara",
      "Burundi",
      "Arman Kirakosyan",
      "Ireland",
      "Swaziland",
      "Monastery (China)",
      "Islam Karimov",
      "South Sudan",
      "Niger",
      "Comoros",
      "Mallam Isa Yuguda",
      "Business (Maldives)",
      "Djibouti",
      "Foreign Affairs (Gabon)",
      "Head of Government (Burkina Faso)",
      "The Hague",
      "Uhuru Muigai Kenyatta",
      "Malaysia",
      "Information / Communication / Transparency Ministry (Iraq)",
      "Mahamadou Issoufou",
      "Foreign Affairs (Syria)",
      "Justin Koumba",
      "Jean Ravelonarivo",
      "Sahrawi people",
      "Abdelkader Taleb Oumar",
      "Central Intelligence Agency",
      "Agence France-Presse",
      "Branko Crvenkovski",
      "Citizen (United Kingdom)",
      "Foreign Affairs (France)",
      "Agriculture / Fishing / Forestry Ministry (Brazil)",
      "Alberto Gonzales",
      "Head of Government (Ethiopia)",
      "Men (France)",
      "Robert Jones Portman",
      "Ronnie Mamoepa",
      "France",
      "Vlado Buckovski",
      "Latvia's First Party",
      "Representatives (France)",
      "Children (Libya)",
      "Hui Liangyu",
      "Royal Administration (Romania)",
      "Airline (Middle East)",
      "Citizen (Thailand)",
      "Member of Parliament (France)",
      "Population (France)",
      "Ricardo Ehrlich",
      "Scientist (China)",
      "Panhellenic Socialist Movement",
      "Protester (Lebanon)",
      "Citizen (Africa)",
      "United Nations Interim Administration in Kosovo",
      "Citizen (Mauritania)",
      "Activist (France)",
      "Samsung",
      "Children (France)",
      "Mbhazima Samuel Shilowa",
      "Citizen (Bulgaria)",
      "Presidential Family (United States)",
      "Lucien Bouchard",
      "Henry M. Paulson",
      "Government (France)",
      "Children (Czech Republic)",
      "Energy Department/Ministry (Morocco)",
      "Military Personnel (France)",
      "Pakistan People's Party",
      "Al-Azhar University",
      "Makhdoom Shah Mahmood Qureshi",
      "Salah-al-Din Al-Bashir",
      "Treasury/Finance Ministry (Syria)",
      "Dahir Riyale Kahin",
      "North America",
      "Citizen (Sudan)",
      "Envoy (Sudan)",
      "Naval (United States)",
      "Jan Fischer",
      "Envoy (France)",
      "Education Ministry (Singapore)",
      "Citizen (Greece)",
      "Defense / Security Ministry (United States)",
      "Interim Leader (Guinea)",
      "Justice Department/Ministery (Romania)",
      "Representatives (Vietnam)",
      "Catherine Ashton",
      "Rasa Juknevičienė",
      "Kostyantyn Gryshchenko",
      "Citizen (North Korea)",
      "Werner Faymann",
      "Armed Rebel (Mali)",
      "Envoy (Afghanistan)",
      "Northern Alliance",
      "Monzer Makhous",
      "Progressive Socialist Party",
      "Food, Water, and Disaster Relief (France)",
      "Salim Idris",
      "People Associated with the Opposition (France)",
      "Thai Airways",
      "Children (Bulgaria)",
      "Veterans (France)",
      "Protester (Thailand)",
      "Police (Australia)",
      "Davit Usupashvili",
      "Citizen (International)",
      "Royal Administration (Azerbaijan)",
      "Citizen (Mali)",
      "House Speaker (United Kingdom)",
      "Fuad Masum",
      "Liu Yandong",
      "Gennady Andreyevich Zyuganov",
      "Federica Mogherini",
      "Heraldo Muñoz",
      "Haider Al-Abadi",
      "Citizen (Australia)",
      "Steven Marshall",
      "Jacob J. Lew",
      "Akali Leader",
      "Energy Department/Ministry (United States)",
      "Jerry Brown",
      "Health Ministry (Iran)",
      "Violeta Bulc",
      "Frank Bainimarama",
      "Energy Department/Ministry (France)",
      "Akilisi Pohiva",
      "Student (France)",
      "Women (France)",
      "Peter O'Neill",
      "Ashraf Ghani Ahmadzai"
    ],
    "evaluation": {
      "precision": 0.019762845849802372,
      "recall": 0.5882352941176471,
      "f1": 0.03824091778202677,
      "exact_match": false,
      "intersection_count": 10
    },
    "process_time": 9.366283893585205
  },
  {
    "quid": 2000030,
    "question": "Which country was the first to receive optimistic remarks from Japan after the children of the Philippines?",
    "ground_truth": [
      "Iraq"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Japan",
        "Philippines"
      ],
      "target_relations": [
        "receive optimistic remarks"
      ],
      "time_constraints": "after the children of the Philippines",
      "answer_type": "entity",
      "query_strategy": "首先识别菲律宾的儿童相关事件的时间点，然后查询在该时间点之后，日本对哪个国家发表了乐观的评论。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Japan', 'Philippines']\n        time_constraint = \"after the children of the Philippines\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Jack Straw",
      "Ho Mei-yueh",
      "Henry Tang",
      "Kim Jong Pil",
      "UN Security Council",
      "George Yeo",
      "Mahmoud Abbas",
      "Doctors Without Borders",
      "Rafiq Hariri",
      "China",
      "Iran",
      "Ma Ying Jeou",
      "Transport (South Korea)",
      "Energy Department/Ministry (Russia)",
      "Alberto Fujimori",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Roh Moo Hyun",
      "Ali Abdullah Saleh",
      "Lien Chan",
      "Head of Government (Colombia)",
      "Student (Laos)",
      "Mitsubishi",
      "Party Member (Taiwan)",
      "South Korea",
      "Gazprom",
      "Envoy (United States)",
      "Foreign Affairs (South Korea)",
      "City Mayor (Australia)",
      "Head of Government (Finland)",
      "Head of Government (Portugal)",
      "Mikulas Dzurinda",
      "Mikhail Sergeyevich Gorbachev",
      "Wen Jiabao",
      "Chung Dong-young",
      "Head of Government (Brazil)",
      "Head of Government (Germany)",
      "Kuomintang",
      "Royal Administration (Spain)",
      "Sheikh Hamad bin Khalifa al-Thani",
      "Indigenous People (Taiwan)",
      "Franklin Drilon",
      "Congress (Peru)",
      "Prime Minister Qarase",
      "Emperor Akihito",
      "Head of Government (Bangladesh)",
      "Admiral (Russia)",
      "Head of Government (Palau)",
      "Head of Government (Pakistan)",
      "Head of Government (Ukraine)",
      "Vietnam",
      "Shaukat Aziz",
      "Student (Palestinian Territory, Occupied)",
      "Media (United States)",
      "Ryutaro Hashimoto",
      "Elizabeth II",
      "Member of Parliament (Thailand)",
      "Benjamin Netanyahu",
      "Okada Katsuya",
      "Immigrants (Peru)",
      "Student (Bangladesh)",
      "Donald Rumsfeld",
      "Wang Yi",
      "Bill Richardson",
      "Undersecretary (United States)",
      "Chongwadai",
      "Head of Government (Greece)",
      "Chu Tuan Nha",
      "Special Rapporteurs of the United Nations",
      "Mikhail Yefimovich Fradkov",
      "Foreign Affairs (Romania)",
      "Muhammad VI",
      "Iraq",
      "Ante Gotovina",
      "Yasuo Fukuda",
      "Jusuf Kalla",
      "Energy Department/Ministry (United States)",
      "Head of Government (South Korea)",
      "Sergey Kuzhugetovich Shoygu",
      "Aigars Kalvitis",
      "Francis J. Harvey",
      "Head of Government (Mongolia)",
      "Joon Young Woo",
      "Saud bin Faisal bin Abdul-Aziz",
      "Kim Kye Gwan",
      "Royal Administration (Saudi Arabia)",
      "Naval (United States)",
      "Tamisuke Watanuki",
      "Wolfgang Schüssel",
      "Sali Berisha",
      "Grand National Party",
      "International Monetary Fund",
      "Business (Iran)",
      "Winston Peters",
      "Elyor Ganiyev",
      "Ahmad bin Abdul-Nabi Mekki",
      "James Wolfensohn",
      "Thailand",
      "William J. Fallon",
      "Military Personnel (Taiwan)",
      "High Ranking Military Personnel (Taiwan)",
      "Cambodia",
      "Laos",
      "Oluṣẹgun Ọbasanjọ",
      "Chuck Hagel",
      "Jakaya Mrisho Kikwete",
      "Elmar Mammadyarov",
      "Head of Government (Ghana)",
      "Head of Government (India)",
      "Alexander Valterovich Litvinenko",
      "Government (Palestinian Territory, Occupied)",
      "Council of Representatives",
      "Tzipi Livni",
      "City Mayor (China)",
      "Henry M. Paulson",
      "Attack Craft (United States)",
      "Sergey Vladilenovich Kiriyenko",
      "Russian Union of Industrialists and Entrepreneurs",
      "Evo Morales",
      "Shimon Peres",
      "Legislature (Iraq)",
      "Planning Commission (India)",
      "Party Member (Iraq)",
      "Jason C. Hu",
      "Military Personnel (South Korea)",
      "Nuri al-Maliki",
      "Monastery (China)",
      "Japan Red Army",
      "Information / Communication / Transparency Ministry (Angola)",
      "Angela Merkel",
      "Foreign Affairs (Malaysia)",
      "Head of Government (Taiwan)",
      "Dissident (China)",
      "Activist (United States)",
      "Linda Lingle",
      "Sanae Takaichi",
      "Tony Blair",
      "Head of Government (Chile)",
      "Lee Myung Bak",
      "Royal Air Force",
      "A.S.S. Hannan Shah",
      "Assemblies (Cambodia)",
      "Defense / Security Ministry (United States)",
      "Islam Karimov",
      "Taiwan Affairs Office",
      "High Commission for Refugees",
      "Armed Separatist (China)",
      "Association of Southeast Asian Nations",
      "United Arab Emirates",
      "Dmitry Anatolyevich Medvedev",
      "Benazir Bhutto",
      "Member of Legislative (Govt) (South Korea)",
      "Army Chief of Staff (United States)",
      "Mehmet Simsek",
      "International Government Organizations",
      "Christine Lagarde",
      "Shigeru Ishiba",
      "Sudan",
      "Military (Russia)",
      "Janez Jansa",
      "Abdul-Karim Al-Arhabi",
      "Xi Jinping",
      "Abdullah Gül",
      "Sergei Ivanovich Shmatkó",
      "Foreign Affairs (France)",
      "Chris Evans",
      "A.K. Antony",
      "Mexico",
      "South Africa",
      "Foreign Affairs (India)",
      "Boris Vyacheslavovich Gryzlov",
      "Kaoru Yosano",
      "Scientist (Russia)",
      "Representatives (Russia)",
      "Radoslaw Sikorski",
      "Maxime Verhagen",
      "Barack Obama",
      "Juan Carlos I",
      "Media Personnel (Iran)",
      "Abhisit Vejjajiva",
      "Grigol Vashadze",
      "Stephen W. Bosworth",
      "Company - Owner or Operator (Kyrgyzstan)",
      "Martin Bursík",
      "Representatives (Kyrgyzstan)",
      "Samsung",
      "Tsai Ing-wen",
      "Rafael Ramírez",
      "Nasser Judeh",
      "Ministry (Iran)",
      "Lawrence Cannon",
      "Gary Roughead",
      "Miguel d' Escoto Brockmann",
      "City Mayor (United States)",
      "Lawyer/Attorney (United States)",
      "USS Nimitz",
      "Anupong Paochinda",
      "Bhutan",
      "Jack Lang",
      "Vuk Jeremić",
      "Joint Chiefs of Staff (United States)",
      "Head of Government (Turkmenistan)",
      "Ministry (South Korea)",
      "Bruno Stagno Ugarte",
      "Member of Legislative (Govt) (Iran)",
      "Aladdin Boroujerdi",
      "City Mayor (New Zealand)",
      "Ministry (Mainland Affairs Council)",
      "Julie Bishop",
      "Cabinet / Council of Ministers / Advisors (Kazakhstan)",
      "Benjamin William Mkapa",
      "Herman Van Rompuy",
      "Foreign Affairs (Israel)",
      "John Faulkner",
      "Finance / Economy / Commerce / Trade Ministry (Australia)",
      "Secret Agent (South Korea)",
      "Sengoku Yoshito",
      "Rafael Correa",
      "Tim Pawlenty",
      "Kazuhiro Haraguchi",
      "Abu Bakr Abdullah al-Qirbi",
      "Tsakhiagiyn Elbegdorj",
      "Boediono",
      "Media Personnel (International)",
      "Presidential Family (Mongolia)",
      "Igor Ivanovich Shuvalov",
      "Ismaïl Omar Guelleh",
      "Philip J. Crowley",
      "Sadako Ogata",
      "Jens Stoltenberg",
      "Head of Government (Bahrain)",
      "Israeli Defense Forces",
      "Employee (Israel)",
      "France",
      "Transport (China)",
      "Julia Gillard",
      "Takeaki Matsumoto",
      "Agustín Carstens",
      "Democratic Party",
      "Noppadon Pattama",
      "Yoshihiko Noda",
      "Yasuo Ichikawa",
      "Bev Perdue",
      "Central Intelligence Agency",
      "Finance / Economy / Commerce / Trade Ministry (Russia)",
      "Wendy Sherman",
      "Jetsun Pema Wangchuck",
      "Foreign Affairs (Kosovo)",
      "Foreign Affairs (Zambia)",
      "Kittiratt Na-Ranong",
      "Foreign Affairs (Nepal)",
      "Student (Thailand)",
      "Andrius Kubilius",
      "Eric Besson",
      "Kuwait",
      "Samuel J. Locklear",
      "Norodom Sihanouk",
      "Foreign Affairs (Singapore)",
      "Michael Sata",
      "Hamrokhon Zarifi",
      "Angola",
      "Yamamoto Ichita",
      "Indigenous People (United Kingdom)",
      "Ed Royce",
      "Defense / Security Ministry (Estonia)",
      "Valdis Dombrovskis",
      "Ethiopia",
      "Hisham Qandil",
      "William Ruto",
      "Gurbanguly Berdymukhammedov",
      "Pat Quinn",
      "Jacob J. Lew",
      "People First Party Korea",
      "Christian Noyer",
      "Nadine Heredia",
      "Oman",
      "Irakli Alasania",
      "Toomas Hendrik Ilves",
      "Andrew Robb",
      "Hashim Thaçi",
      "Malaysia",
      "Moro Islamic Liberation Front",
      "Citizen (North Korea)",
      "Rose Gottemoeller",
      "David Shear",
      "Ministry of Tourism (Croatia)",
      "Suh Chung-won",
      "Governor (South Korea)",
      "Health Ministry (Iran)",
      "Thongsing Thammavong",
      "Presidential Family (United States)",
      "Ricardo Cabrisas",
      "Uhuru Muigai Kenyatta",
      "Tan Sri Muhyiddin Yassin",
      "Pedro Manuel Mamede Passos Coelho",
      "Peter O'Neill",
      "Tourist (Southeast Asia)",
      "Nicholas \"Nick\" Xenophon",
      "Pham Binh Minh",
      "Abdel Fattah Al-Sisi",
      "Student (Kenya)",
      "Mogens Lykketoft",
      "Shivraj Singh Chouhan",
      "Austin \"Jack\" Warner",
      "Boris Johnson",
      "Energy Department/Ministry (Iran)",
      "Head of Government (Egypt)",
      "Abdul Hamid",
      "Aceh",
      "Ireland",
      "Businessperson (Laos)",
      "Middle East",
      "Yemen",
      "Romania",
      "Foreign Affairs (Liberia)",
      "Kazakhstan",
      "Somsavat Lengsava",
      "Japan",
      "Sex Trade (China)",
      "Aguinaldo Jaime",
      "Eritrea",
      "Luka Bebic",
      "Treasury/Finance Ministry (Egypt)",
      "Guatemala",
      "The Hague",
      "South Sudan",
      "Northern Ireland",
      "William Kabogo",
      "John Baird",
      "Health Ministry (Russia)",
      "Yury Mikhaylovich Luzhkov",
      "Paramount Ruler Sirajuddin",
      "Representatives (Japan)",
      "Jay Rockefeller",
      "Joe Manchin",
      "Lawmaker (Japan)",
      "National Security Advisor (South Korea)",
      "Royal Administration (Japan)",
      "Military Personnel (Japan)",
      "Donald J. Johnston",
      "Samuel Schmid",
      "Men (United States)",
      "Anguel Marin",
      "Media Personnel (Japan)",
      "Japan Self-Defense Forces",
      "African Union",
      "Valdas Adamkus",
      "Cabinet / Council of Ministers / Advisors (Japan)",
      "Governor (Japan)",
      "High Ranking Military Personnel (Japan)",
      "Citizen (Thailand)",
      "Takeo Nishioka",
      "Police (Israel)",
      "Men (Japan)",
      "Mainland Affairs Council",
      "Hideaki Kobayashi",
      "Government Official (Japan)",
      "Thanong Bidaya",
      "City Mayor (Iraq)",
      "Treasury/Finance Ministry (Japan)",
      "Representative to the United Nations (North Korea)",
      "Javier Solana",
      "Ministry (Brazil)",
      "Charles Murigande",
      "Ministry (Oman)",
      "Ram Paswan",
      "Robert M. Kimmitt",
      "Presidential Family (Japan)",
      "Industry (India)",
      "Rodrigo Rato",
      "Children (Azerbaijan)",
      "Peter Pace",
      "Citizen (Nigeria)",
      "House Speaker (Japan)",
      "Qatar",
      "Qin Gang",
      "Other Authorities / Officials (Russia)",
      "Treasury/Finance Ministry (Germany)",
      "Chen Bingde",
      "Citizen (Sudan)",
      "Foreign Affairs (Portugal)",
      "Citizen (Australia)",
      "Jew (Israel)",
      "Jian Yu",
      "Mahmoud Ahmadinejad",
      "Women / Children / Social / Welfare / Development / Religion Ministry (South Korea)",
      "Mwai Kibaki",
      "Citizen (International)",
      "Umaru Musa Yar'Adua",
      "Citizen (United Kingdom)",
      "Citizen (Bulgaria)",
      "Medical Personnel (Japan)",
      "Ministry (Switzerland)",
      "Finance / Economy / Commerce / Trade Ministry (Japan)",
      "Lockwood Smith",
      "Heinz Fischer",
      "Bill English",
      "Thief (Japan)",
      "Workers' Party (North Korea)",
      "Ben Shalom Bernanke",
      "Citizen (Brazil)",
      "Catherine Ashton",
      "Takahiro Yokomichi",
      "House of Representatives (Japan)",
      "Representatives (France)",
      "Citizen (Zambia)",
      "Finance / Economy / Commerce / Trade Ministry (Vietnam)",
      "Foreign Affairs (Austria)",
      "Citizen (Southeast Asia)",
      "Meira Kumar",
      "Philip Hammond",
      "Employee (Thailand)",
      "Kōichirō Genba",
      "Head of Government (Timor-Leste)",
      "María Ángela Holguín",
      "Mario Monti",
      "International Federation of Red Cross and Red Crescent Societies",
      "Sheikh Hamad bin Isa al Khalifah",
      "Uighur (Japan)",
      "Ivan Gasparovic",
      "State Duma (Japan)",
      "Wang Ching-feng",
      "Vincent C. Siew",
      "United States Senate",
      "Seamen (Russia)",
      "Colombia",
      "Campbell Newman",
      "Royal Administration (Croatia)",
      "Yu Zhengsheng",
      "Special Commission (United Nations)",
      "Finance / Economy / Commerce / Trade Ministry (New Zealand)",
      "Jay Inslee",
      "Portia Simpson Miller",
      "Viktor Orban",
      "Deval Patrick",
      "Raul Hernandez",
      "Solidarity",
      "Abdulla Yameen",
      "Chimed Saikhanbileg",
      "Larry Hogan",
      "Federica Mogherini",
      "Edgars Rinkevics",
      "Kazumi Matsui",
      "John Richardson",
      "Anatoly Antonov",
      "Yoon Sang-jick",
      "Steven Marshall"
    ],
    "evaluation": {
      "precision": 0.002242152466367713,
      "recall": 1.0,
      "f1": 0.00447427293064877,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 8.882947444915771
  },
  {
    "quid": 2000031,
    "question": "Who visited Qatar after 8 March 2015?",
    "ground_truth": [
      "Nuri al-Maliki",
      "Iran",
      "Daniel Constantin",
      "Habib Essid",
      "Mahmoud Abbas",
      "Chongwadai",
      "Nicos Anastasiades",
      "Philip Hammond",
      "Presidential Family (United States)",
      "Shura Council",
      "Isaias Afewerki",
      "Khaled Bahah",
      "Violeta Bulc",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Ministry (Iran)",
      "Barack Obama"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Qatar"
      ],
      "target_relations": [
        "visited"
      ],
      "time_constraints": "after 8 March 2015",
      "answer_type": "entity",
      "query_strategy": "Find all entities that have the relation 'visited' with 'Qatar' and the time of the visit is after 8 March 2015."
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Qatar']\n        time_constraint = \"after 8 March 2015\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Ismaïl Omar Guelleh",
      "UAE Armed Forces",
      "Gerhard Schröder",
      "Head of Government (Germany)",
      "Foreign Affairs (Dominican Republic)",
      "Hilmi Özkök",
      "Pervez Musharraf",
      "Head of Government (Pakistan)",
      "China",
      "Ali Abdullah Saleh",
      "Nonaligned Movement",
      "Mahmoud Abbas",
      "African Union",
      "Undersecretary (United States)",
      "Mauritania",
      "Kuwait",
      "Oman",
      "Nabih Berri",
      "Peter Pace",
      "James Wolfensohn",
      "Elmar Mammadyarov",
      "Abdullah Gül",
      "Head of Government (Egypt)",
      "Sheikh Ahmed Abdullah",
      "Foreign Affairs (Mauritania)",
      "Foreign Affairs (India)",
      "Juan Carlos I",
      "George Yeo",
      "High Commission for Refugees",
      "Foreign Affairs (Syria)",
      "Maumoon Abdul Gayoom",
      "Nasser Judeh",
      "Islamic Courts Union",
      "Eritrea",
      "Mahmoud Ahmadinejad",
      "Military Personnel (India)",
      "Emma Bonino",
      "Shimon Peres",
      "Middle East",
      "Isaias Afewerki",
      "South Korea",
      "Roh Moo Hyun",
      "Head of Government (South Korea)",
      "William J. Fallon",
      "Ministry (Iran)",
      "Kemal Unakitan",
      "Abu Bakr Abdullah al-Qirbi",
      "Abdul-Karim Al-Arhabi",
      "Saud bin Faisal bin Abdul-Aziz",
      "Iran",
      "United Arab Emirates",
      "Branko Crvenkovski",
      "Ali Muhammad Mujawar",
      "Askalu Menkerios",
      "Vietnam",
      "Businessperson (Poland)",
      "Tzipi Livni",
      "Foreign Affairs (Israel)",
      "Xi Jinping",
      "Envoy (United States)",
      "Javier Solana",
      "Head of Government (India)",
      "Barack Obama",
      "Andrés Velasco",
      "Sudan",
      "International Government Organizations",
      "Mwai Kibaki",
      "Mohamed Ould Abdel Aziz",
      "Abdoulaye Wade",
      "Government (Sudan)",
      "Milo Djukanovic",
      "Foreign Affairs (France)",
      "Scholar (Somalia)",
      "Fawzi Salloukh",
      "Cristina Fernández de Kirchner",
      "Nuri al-Maliki",
      "Sheikh Hamid",
      "Popular Congress",
      "Representatives (Sudan)",
      "Abhisit Vejjajiva",
      "Luka Bebic",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Esfandiar Rahim Mashaei",
      "Vuk Jeremić",
      "Hamrokhon Zarifi",
      "Thailand",
      "Binyamin Ben-Eliezer",
      "Yemen",
      "Gurbanguly Berdymukhammedov",
      "Head of Government (Turkmenistan)",
      "Islam Karimov",
      "Heinz Fischer",
      "Radoslaw Sikorski",
      "A.K. Antony",
      "Environment Department/Ministry (Austria)",
      "Aladdin Boroujerdi",
      "National Transitional Council",
      "Emmanuel Nadingar",
      "Wen Jiabao",
      "Government (Palestinian Territory, Occupied)",
      "Lee Myung Bak",
      "Media (Libya)",
      "Zalmai Rassoul",
      "Iraq",
      "Employee (Philippines)",
      "Kostyantyn Gryshchenko",
      "Muhammad VI",
      "Businessperson (Africa)",
      "Antonis Samaras",
      "Head of Government (Greece)",
      "Cleric (Pakistan)",
      "Inter-Services Intelligence",
      "Sheikh Hamad bin Isa al Khalifah",
      "Hisham Qandil",
      "Sheikh Hamad bin Khalifa al-Thani",
      "Chuck Hagel",
      "Macky Sall",
      "Envoy (Afghanistan)",
      "Human Rights Watch",
      "Salim Idris",
      "Ibrahim Boubacar Keïta",
      "Dragomir Stoynev",
      "Head of Government (Kenya)",
      "Uhuru Muigai Kenyatta",
      "Royal Administration (Saudi Arabia)",
      "Mohamed Ibn Chambas",
      "Fishermen (India)",
      "Sabah Khaled Al-Hamad Al-Sabah",
      "Head of Government (Gambia)",
      "Head of Government (Ghana)",
      "Jens Stoltenberg",
      "Nguyen Xuan Phuc",
      "Nicos Anastasiades",
      "Chongwadai",
      "Khaled Bahah",
      "Daniel Constantin",
      "Philip Hammond",
      "Presidential Family (United States)",
      "Shura Council",
      "Violeta Bulc",
      "Habib Essid",
      "Malaysia",
      "France",
      "Angola",
      "Kazakhstan",
      "Cambodia",
      "Ethiopia",
      "Abdel Fattah Al-Sisi",
      "Rafael Ramírez",
      "Businessperson (Netherlands)",
      "Head of Government (Qatar)",
      "Organization of Petroleum Exporting Countries",
      "Citizen (International)",
      "Lawyer/Attorney (Egypt)",
      "Evan Bayh",
      "Terje Roed Larsen",
      "Foreign Affairs (South Korea)",
      "Government (Qatar)",
      "Foreign Affairs (Italy)",
      "Muslim (Qatar)",
      "South Africa",
      "Japan",
      "Mehmet Simsek",
      "Al Jazeera",
      "Henry M. Paulson",
      "Frank Bainimarama",
      "Citizen (Sudan)",
      "Evo Morales",
      "Northern Ireland",
      "Envoy (Sudan)",
      "Philip J. Crowley",
      "Steven Chu",
      "Dmitry Anatolyevich Medvedev",
      "Grigol Vashadze",
      "Jian Yu",
      "Georgios Papandreou",
      "Naval (Bangladesh)",
      "Citizen (Australia)",
      "Agence France-Presse",
      "Head of Government (Cyprus)",
      "Catherine Ashton",
      "Media (Qatar)",
      "Presidential Press Service (Department of Defense)",
      "Pakistan People's Party",
      "Andrew Robb",
      "Ashraf Ghani Ahmadzai"
    ],
    "evaluation": {
      "precision": 0.08602150537634409,
      "recall": 1.0,
      "f1": 0.15841584158415845,
      "exact_match": false,
      "intersection_count": 16
    },
    "process_time": 9.013950109481812
  },
  {
    "quid": 2000032,
    "question": "Who would want to have diplomatic cooperation with Iran in March, 2009?",
    "ground_truth": [
      "Barack Obama",
      "Lee Myung Bak",
      "Business (Tunisia)",
      "Iraq",
      "Mauritania"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Iran"
      ],
      "target_relations": [
        "diplomatic cooperation"
      ],
      "time_constraints": "March, 2009",
      "answer_type": "entity",
      "query_strategy": "首先识别出问题中的关键实体'Iran'和目标关系'diplomatic cooperation'，然后应用时间约束'March, 2009'来筛选出在该时间段内与伊朗有外交合作关系的实体。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Iran']\n        time_constraint = \"March, 2009\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Islam Karimov",
      "Oluṣẹgun Ọbasanjọ",
      "Riaz Khokhar",
      "Representatives (Russia)",
      "UN Security Council",
      "Special Rapporteurs of the United Nations",
      "Pervez Musharraf",
      "Shaukat Aziz",
      "Head of Government (Pakistan)",
      "United Arab Emirates",
      "Ministry (Egypt)",
      "Refugee (Afghanistan)",
      "Education Ministry (Algeria)",
      "Muhammad Naji al-Otari",
      "Mehdi Karrubi",
      "Media Personnel (International)",
      "Koichiro Matsuura",
      "Mohammad Salimi",
      "Ministry of Tourism (Tunisia)",
      "Sherali Khayrulloyev",
      "Congress of Deputies",
      "Ministry (Senegal)",
      "Mohammad Mohaqiq",
      "Romania",
      "Iraq",
      "Mahmoud Ahmadinejad",
      "Ali Abdullah Saleh",
      "Gholamali Haddad Adel",
      "Nabih Berri",
      "Lari",
      "Information / Communication / Transparency Ministry (Iraq)",
      "France",
      "Kuwait",
      "Foreign Affairs (India)",
      "Foreign Affairs (South Korea)",
      "Passenger Jet (Iraq)",
      "Ahmad Chalabi",
      "China",
      "Foreign Affairs (South Africa)",
      "National Security Advisor (Iraq)",
      "Nonaligned Movement",
      "National Airline (Iraq)",
      "Adil Abdul-Mahdi",
      "Sergey Vladilenovich Kiriyenko",
      "Saydullo Khayrulloyev",
      "Human Rights Commission (Pakistan)",
      "Ministry (Afghanistan)",
      "Japan",
      "Valentin Sobolev",
      "Javier Solana",
      "Pilgrim (Kyrgyzstan)",
      "Energy Department/Ministry (Russia)",
      "Foreign Affairs (Denmark)",
      "Farouk al-Sharaa",
      "Ricardo Cabrisas",
      "Jack Straw",
      "Okada Katsuya",
      "Jakaya Mrisho Kikwete",
      "Head of Government (Qatar)",
      "Foreign Affairs (Belarus)",
      "Saud bin Faisal bin Abdul-Aziz",
      "Yemen",
      "Abdullah Gül",
      "Abdoulaye Wade",
      "Georgios Papandreou",
      "Sheikh Hamad bin Khalifa al-Thani",
      "Foreign Affairs (Syria)",
      "City Mayor (Iraq)",
      "Saifur Rahman",
      "Donald Rumsfeld",
      "Joschka Fischer",
      "Council of Representatives",
      "Jack Lang",
      "Ismaïl Omar Guelleh",
      "Nuri al-Maliki",
      "Head of Government (Belarus)",
      "Pier Ferdinando Casini",
      "Oman",
      "Jusuf Kalla",
      "Indigenous People (United States)",
      "Legislature (Iraq)",
      "Member of Legislative (Govt) (Lebanon)",
      "Head of Government (Gambia)",
      "Vietnam",
      "Envoy (France)",
      "Sudan",
      "National Security Advisor (Saudi Arabia)",
      "Bandar bin Sultan",
      "Mahdi Army",
      "Supreme Council (Iraq)",
      "Agence France-Presse",
      "Angel Luis D'Elia",
      "Activist (United States)",
      "Abu Bakr Abdullah al-Qirbi",
      "Mahmoud Abbas",
      "Economic Cooperation Organization",
      "Arab Israelis",
      "Mohammed Jassem Al-Sager",
      "Abdul Kadir",
      "Daniel Ortega",
      "Head of Government (Turkmenistan)",
      "Richard Boucher",
      "Gurbanguly Berdymukhammedov",
      "Kazakhstan",
      "Elmar Mammadyarov",
      "Rashid Meredov",
      "Businessperson (Netherlands)",
      "Sergei Ivanovich Shmatkó",
      "National Security Advisor (Georgia)",
      "National Security Council of Georgia",
      "Foreign Affairs (France)",
      "Tourist (Belgium)",
      "Foreign Affairs (Belgium)",
      "Ministry (Morocco)",
      "Lawmaker (United Kingdom)",
      "Party Member (Iraq)",
      "Shivshankar Menon",
      "Murli Deora",
      "Shura Council",
      "Envoy (Thailand)",
      "Industry (India)",
      "Gazprom",
      "Government Official (Russia)",
      "Member of Parliament (Iraq)",
      "Mohammad Ali Jafari",
      "Esfandiar Rahim Mashaei",
      "Media Personnel (China)",
      "Attorney General (Cyprus)",
      "Isaias Afewerki",
      "Muslim (United Kingdom)",
      "High Ranking Military Personnel (Syria)",
      "Ali al-Dabbagh",
      "Qatar",
      "Ahmed Abdallah Sambi",
      "Gazprom Neft",
      "Barack Obama",
      "Foreign Affairs (Malaysia)",
      "Hamrokhon Zarifi",
      "Evo Morales",
      "High Commission for Refugees",
      "Rafael Correa",
      "Rafiq Hariri",
      "Massoud Barzani",
      "Sheikh Hamad bin Isa al Khalifah",
      "Mehmet Simsek",
      "Maria Isabel Salvador",
      "Head of Government (South Korea)",
      "African Union",
      "Gerhard Schröder",
      "Angela Merkel",
      "Rehman Malik",
      "Legislature (Venezuela)",
      "Miguel d' Escoto Brockmann",
      "Makhdoom Shah Mahmood Qureshi",
      "Ministry (Oman)",
      "Yunus Qanuni",
      "Benjamin Netanyahu",
      "Petr Lom",
      "Media Personnel (Greece)",
      "Foreign Affairs (Venezuela)",
      "Qabus ibn Sa`id",
      "Member of Legislative (Govt) (Turkmenistan)",
      "Ministry (Venezuela)",
      "Benazir Bhutto",
      "Member of Legislative (Govt) (Syria)",
      "Grigol Vashadze",
      "Member of Legislative (Govt) (South Africa)",
      "Mohamed Ould Abdel Aziz",
      "National Assembly of Pakistan",
      "Legislature (South Africa)",
      "Afghanistan Investment Support Agency",
      "Thailand",
      "Airline (Kyrgyzstan)",
      "Head of Government (Uruguay)",
      "Foreign Affairs (Israel)",
      "Foreign Affairs (Gabon)",
      "Head of Government (Greece)",
      "Business (Poland)",
      "Head of Government (Brazil)",
      "Ministry (Brazil)",
      "Head of Government (Sri Lanka)",
      "Karim Wade",
      "Malaysia",
      "Member of Parliament (Indonesia)",
      "Zalmai Rassoul",
      "Ministry (Sudan)",
      "Cambodia",
      "Progressive Socialist Party",
      "Bolivia",
      "Indigenous People (United Kingdom)",
      "Ebrahim Yazdi",
      "Jawad al-Bulani",
      "Justin Koumba",
      "George Yeo",
      "Free Democratic Party",
      "Ahmad Shuja Pasha",
      "Mohammed Qasim Fahim",
      "Envoy (International)",
      "Ali Baqeri",
      "International Government Organizations",
      "Citizen (Saudi Arabia)",
      "Head of Government (Kenya)",
      "Royal Administration (Jordan)",
      "Foreign Affairs (Uruguay)",
      "Chen Zhili",
      "International Monetary Fund",
      "Inter-Services Intelligence",
      "Tourist (Turkey)",
      "Foreign Affairs (Austria)",
      "Ombudsman (Kyrgyzstan)",
      "Head of Government (Ghana)",
      "Catherine Ashton",
      "High Ranking Military Personnel (Oman)",
      "Meira Kumar",
      "Chief of Staff (Iraq)",
      "Spy Plane (United States)",
      "Central Intelligence Agency",
      "Naval (United States)",
      "Farooq Abdullah",
      "Ministry (Zimbabwe)",
      "Transport (China)",
      "Mohammad Reza Naqdi",
      "Other Authorities / Officials (Brazil)",
      "Treasury/Finance Ministry (Syria)",
      "Raúl Castro",
      "Government Affiliated Bank (Belarus)",
      "Head of Government (Egypt)",
      "Royal Administration (Saudi Arabia)",
      "Prime Minister Bhattarai",
      "Foreign Affairs (Lebanon)",
      "Yasser Ali",
      "Head of Government (India)",
      "Boediono",
      "Foreign Affairs (Brunei)",
      "Khandu Wangchuk",
      "Tsakhiagiyn Elbegdorj",
      "Head of Government (Mongolia)",
      "Protester (Egypt)",
      "Ministry (Tunisia)",
      "Pilgrim (Pakistan)",
      "Student (Tajikistan)",
      "Lawmaker (Vietnam)",
      "Pilgrim (India)",
      "Mohammad Soleimani",
      "Defense / Security Ministry (United States)",
      "Congress (Argentina)",
      "Head of Government (Burundi)",
      "Consultative Assembly (Oman)",
      "Ahmad Mohamed Ibrahim",
      "High Ranking Military Personnel (Sudan)",
      "National Alliance (Iraq)",
      "Aladdin Boroujerdi",
      "Omar Halleslevens",
      "Foreign Affairs (Italy)",
      "Military Personnel (Azerbaijan)",
      "Envoy (Oman)",
      "Indigenous People (Syria)",
      "South Africa",
      "Justice and Development Party",
      "Member of Legislative (Govt) (Algeria)",
      "Armed Rebel (Syria)",
      "Hannes Swoboda",
      "House of Representatives (Indonesia)",
      "Emma Bonino",
      "Dmitry Olegovich Rogozin",
      "Rodrigo Jalloul",
      "Majid Takht Ravanchi",
      "Ireland",
      "Member of Legislative (Govt) (South Korea)",
      "South Korea",
      "Portugal",
      "Radoslaw Sikorski",
      "Foreign Affairs (Singapore)",
      "Business (Germany)",
      "Ministry (Poland)",
      "Lawmaker (Lebanon)",
      "Edgars Rinkevics",
      "ANS Group of Companies",
      "Heinz Fischer",
      "Santos Edelmar Lopez",
      "Simon Gass",
      "Business (Belgium)",
      "Business (Hungary)",
      "Envoy (Germany)",
      "Morteza Sarmadi",
      "Government (South Africa)",
      "Member of Legislative (Govt) (Slovenia)",
      "Royal Administration (Spain)",
      "Amina Mohamed",
      "Martin Lidegaard",
      "Treasury/Finance Ministry (Azerbaijan)",
      "Lawyer/Attorney (United Kingdom)",
      "Haider Al-Abadi",
      "Tourist (Austria)",
      "Ministry (Vietnam)",
      "Nguyen Xuan Phuc",
      "Head of Government (Chad)",
      "Staffan de Mistura",
      "Tourist (South Korea)",
      "Mohammad Nahavandian",
      "International Federation of Red Cross and Red Crescent Societies",
      "Ashraf Ghani Ahmadzai",
      "Sergey Kuzhugetovich Shoygu",
      "Muhammad Salem al-Ghabban",
      "Davit Usupashvili",
      "Bertie Ahern",
      "Wang Yi",
      "Xi Jinping",
      "Lawyer/Attorney (Uzbekistan)",
      "Julie Bishop",
      "Nur Ahmad Nikbakht",
      "Nasser Judeh",
      "Pham Binh Minh",
      "Fishermen (India)",
      "Pakistan People's Party",
      "Vojtěch Filip",
      "Fahed al-Jasem el-Freij",
      "Ali Jannati",
      "Fuad Masum",
      "Behrouz Kamalvandi",
      "Rasim Ljajic",
      "Royal Dutch Shell",
      "Doctors Without Borders",
      "Ali Tayyebnia",
      "Philip Hammond",
      "Head of Government (Germany)",
      "Treasury/Finance Ministry (Germany)",
      "Federica Mogherini",
      "Sabah Khaled Al-Hamad Al-Sabah",
      "Shahin Mustafayev",
      "Treasury/Finance Ministry (Japan)",
      "Viktor Orban",
      "Mexico",
      "Stephane Le Foll",
      "Ministry (Switzerland)",
      "Representative to the United Nations (Chile)",
      "Tourist (Poland)",
      "Eshaq Jahangiri",
      "Muhammadu Buhari",
      "Company - Owner or Operator (Italy)",
      "Alexis Tsipras",
      "Industrial / Textiles / Mining Ministry (Sweden)",
      "Daniel Mitov",
      "Igor Ivanovich Shuvalov",
      "Denis Manturov",
      "Ethiopia",
      "Public Works (Kuwait)",
      "Comoros",
      "Fawzi Salloukh",
      "Business (Belarus)",
      "Court Judge (Malaysia)",
      "Angola",
      "Colombia",
      "Middle East",
      "The Hague",
      "Eritrea",
      "Bhutan",
      "Togo",
      "Refugee (Sri Lanka)",
      "Djibouti",
      "Muhammad VI",
      "Government (Pakistan)",
      "Macky Sall",
      "Niger",
      "Legislature (Ecuador)",
      "Anandiben Patel",
      "Kamaladdin Heydarov",
      "Burundi",
      "Tanzania",
      "al-Aqsa Martyrs' Brigades",
      "Simbarashe Mumbengegwi",
      "Iran",
      "The Chronicle",
      "Ministry (Iran)",
      "Amanullah Khan",
      "Professor (Netherlands)",
      "Business (Iraq)",
      "Borys Tarasyuk",
      "Tony Blair",
      "Ruprecht Polenz",
      "Energy Department/Ministry (Afghanistan)",
      "Government Delegation (China)",
      "Associated Press",
      "Bill Richardson",
      "Philip Alston",
      "Russian Railways",
      "Zurab Nogaideli",
      "Undersecretary (United States)",
      "Ministry (United States)",
      "General Contractor (Iran)",
      "Citizen (United Kingdom)",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Jew (Israel)",
      "Envoy (United States)",
      "Media Personnel (Iran)",
      "Royal Administration (Iran)",
      "Solomon Passy",
      "Shimon Peres",
      "Korean Workers Party",
      "Businessperson (Turkey)",
      "Reinhold Stephanes",
      "Member of Legislative (Govt) (Iran)",
      "Education (Iran)",
      "Student (Iran)",
      "Dmitry Anatolyevich Medvedev",
      "Business (Iran)",
      "Ministry of Tourism (Sri Lanka)",
      "Congress (United States)",
      "Businessperson (Italy)",
      "Citizen (Venezuela)",
      "Legislature (Bahrain)",
      "Airline (Iran)",
      "Citizen (Brazil)",
      "Austria Press Agency",
      "Seyran Ohanyan",
      "Malam Bacai Sanhá",
      "Ministry of Health",
      "Ministry of Women (Senegal)",
      "Foreign Affairs (Ethiopia)",
      "Armando Benedetti",
      "Yoshihiko Noda",
      "Wendy Sherman",
      "Foreign Affairs (Latin America)",
      "Mehr News Agency",
      "Wen Jiabao",
      "Mohammad Abbasi",
      "Citizen (International)",
      "Energy Department/Ministry (Iran)",
      "Lawmaker (Syria)",
      "Cristina Fernández de Kirchner",
      "United States Senate",
      "Representatives (Syria)",
      "Chuck Hagel",
      "Citizen (Benin)",
      "Admiral (Iran)",
      "Envoy (Afghanistan)",
      "Legislature (Turkey)",
      "Business (Austria)",
      "Senate (Italy)",
      "Foreign Affairs (Romania)",
      "Legislature (Romania)",
      "Tasnim news agency",
      "Lawmaker (Switzerland)",
      "Government (Poland)",
      "Member of Parliament (France)",
      "Lawmaker (Nicaragua)",
      "Health Ministry (Russia)",
      "Legislature (Spain)",
      "Legislature (Czech Republic)",
      "Foreign Affairs (Slovakia)",
      "Citizen (Denmark)",
      "Derek Plumbly",
      "Citizen (Nigeria)",
      "Passenger Jet (Iran)",
      "Tourist (United States)",
      "Attorney General (Qatar)",
      "Alireza Bigdeli",
      "Dmitriy Kiselev",
      "Environment Department/Ministry (Italy)",
      "Tatarstan",
      "Rand Paul",
      "Ministry of Shipping (Iran)",
      "Ministry of Tourism (Croatia)",
      "Ministry (Czech Republic)",
      "Special Commission (Iran)",
      "Media Personnel (Serbia)",
      "Natig Aliyev",
      "Karl Erjavec"
    ],
    "evaluation": {
      "precision": 0.004273504273504274,
      "recall": 0.4,
      "f1": 0.008456659619450317,
      "exact_match": false,
      "intersection_count": 2
    },
    "process_time": 9.776451349258423
  },
  {
    "quid": 2000033,
    "question": "Which country would want to cooperate with Japan first, after India's industry?",
    "ground_truth": [
      "South Korea"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "India",
        "Japan"
      ],
      "target_relations": [
        "cooperate with"
      ],
      "time_constraints": "after India's industry",
      "answer_type": "entity",
      "query_strategy": "The query aims to find the country that would want to cooperate with Japan first, following India's industry. The key entities are India and Japan, with the target relation being 'cooperate with'. The time constraint is 'after India's industry', indicating a temporal sequence. The answer type is expected to be an entity (a country)."
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['India', 'Japan']\n        time_constraint = \"after India's industry\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Wen Jiabao",
      "Pervez Musharraf",
      "Mahmoud Abbas",
      "Shivraj Patil",
      "Abdul Kalam",
      "Royal Administration (Saudi Arabia)",
      "Joao Miranda",
      "Party Member (United Kingdom)",
      "A.K. Antony",
      "Ananth Kumar",
      "Prachanda",
      "Shivshankar Menon",
      "Le Hong Anh",
      "Scholar (United States)",
      "Head of Government (Mongolia)",
      "Barack Obama",
      "Xi Jinping",
      "Iraq",
      "Meira Kumar",
      "Rashtriya Swayamsevak Sangh",
      "Amit Shah",
      "China",
      "Iran",
      "France",
      "Awad Ahmed al-Jaz",
      "Sudan",
      "Thailand",
      "Barkatulla Bulu",
      "South Korea",
      "Qatar",
      "Kuwait",
      "Japan",
      "Thongsing Thammavong",
      "Bolivia",
      "Mexico",
      "Laos",
      "Oman",
      "Abdullah Gül",
      "Vietnam",
      "Dmitry Anatolyevich Medvedev",
      "Kazakhstan",
      "Pakistan administered Kashmir",
      "Cambodia",
      "Malaysia",
      "United Arab Emirates",
      "South Africa",
      "Zalmai Rassoul",
      "Bhutan",
      "Ethiopia",
      "Maldives",
      "Foreign Affairs (Italy)",
      "Hamrokhon Zarifi",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Business (Bahrain)",
      "Gurbanguly Berdymukhammedov",
      "Angola",
      "Naval (United States)",
      "Ireland",
      "Head of Government (India)",
      "Governor (India)",
      "Air Marshall (India)",
      "Maumoon Abdul Gayoom",
      "Dharam Singh",
      "Sheikh Hamad bin Khalifa al-Thani",
      "William J. Fallon",
      "Rajya Sabha",
      "Foreign Affairs (India)",
      "Romania",
      "Prime Minister Qarase",
      "Medical Personnel (India)",
      "Minister Bogollagama",
      "Election Commission (India)",
      "Mikhail Yefimovich Fradkov",
      "Head of Government (Cyprus)",
      "Military Personnel (India)",
      "Peter Pace",
      "Secretary of State for the Home Department",
      "Sher Bahadur Deuba",
      "Member of Parliament (India)",
      "Trade Union Congress",
      "Arjun Singh",
      "Head of Government (Botswana)",
      "Lee Myung Bak",
      "Men (India)",
      "High Ranking Military Personnel (India)",
      "Shiv Sena",
      "Minister Patnaik",
      "Mahmoud Ahmadinejad",
      "Head of Government (Pakistan)",
      "Media (India)",
      "Labor Union (India)",
      "Cristina Fernández de Kirchner",
      "Citizen (Australia)",
      "Gopal Krishna Pillai",
      "Catherine Ashton",
      "Director General (India)",
      "Abhisit Vejjajiva",
      "Islam Karimov",
      "A.P. Sharma",
      "M.R. Sharma",
      "Head of Government (Egypt)",
      "Tanzania",
      "Julia Gillard",
      "Civil Aviation Department (India)",
      "Wang Yi",
      "Party President (Vietnam)",
      "Emperor Akihito",
      "Aam Aadmi Party",
      "Justice Department/Ministery (India)",
      "Dharamvira Gandhi",
      "Citizen (United Kingdom)",
      "Party President (Bharatiya Janata)",
      "Vijay Sharma",
      "Ashraf Ghani Ahmadzai",
      "Maithripala Sirisena",
      "Villager (India)",
      "Medha Patkar"
    ],
    "evaluation": {
      "precision": 0.008547008547008548,
      "recall": 1.0,
      "f1": 0.016949152542372885,
      "exact_match": false,
      "intersection_count": 1
    },
    "process_time": 11.503816366195679
  },
  {
    "quid": 2000034,
    "question": "Who made optimistic remarks about Colombia before May 2006?",
    "ground_truth": [
      "Mexico",
      "Government (Ecuador)"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Colombia"
      ],
      "target_relations": [
        "made optimistic remarks about"
      ],
      "time_constraints": "before May 2006",
      "answer_type": "entity",
      "query_strategy": "Find entities that have the relation 'made optimistic remarks about' with 'Colombia' before May 2006."
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Colombia']\n        time_constraint = \"before May 2006\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Armed Band (Spain)",
      "Head of Government (Peru)",
      "Jaroslav Palas",
      "Rodrigo Rato",
      "Party Member (Brazil)",
      "Associated Press",
      "Daniel Scioli",
      "Terrorist (Irish Republican Army)",
      "Alberto Gonzales",
      "José Miguel Insulza",
      "Military (Guatemala)",
      "Ireland",
      "Pervez Musharraf",
      "Head of Government (Brazil)",
      "Foreign Affairs (France)",
      "Evo Morales",
      "France",
      "Jorge Briz Abularach",
      "Sher Bahadur Deuba",
      "Media Personnel (International)",
      "Head of Government (Cuba)",
      "Nonaligned Movement",
      "Mwai Kibaki",
      "Manuel Rosales",
      "Álvaro García",
      "Bolivia",
      "Rafael Correa",
      "Peter Pace",
      "Mexico",
      "National Action Party",
      "Congress (United States)",
      "Government (Ecuador)",
      "Head of Government (Germany)",
      "Royal Administration (Spain)",
      "Sérgio de Oliveira Cabral Santos Filho",
      "China",
      "Al Gore",
      "Dominican Republic",
      "Ministry (Venezuela)",
      "Alvaro Leyva",
      "Mahmoud Ahmadinejad",
      "Iran",
      "Embraer",
      "Raúl Castro",
      "Marco Aurélio Garcia",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Foreign Affairs (Venezuela)",
      "Fernando Berrocal",
      "Ingrid Betancourt Pulecio",
      "Bill Richardson",
      "Oscar Ortiz",
      "Nelson Azevedo Jobim",
      "Angela Merkel",
      "Javier Solana",
      "Government (Germany)",
      "Military (Ecuador)",
      "Barack Obama",
      "Xi Jinping",
      "Diego Borja",
      "Philip Alston",
      "Carlos M. Hernández López",
      "Special Rapporteurs of the United Nations",
      "Gustavo Márquez",
      "Grand National Party",
      "Foreign Affairs (Italy)",
      "Wu Aiying",
      "María Ángela Holguín",
      "Abdullah Gül",
      "Lawyer/Attorney (United States)",
      "Rodrigo Rivera Salazar",
      "Walid Makled",
      "Military Personnel (Peru)",
      "Mahmoud Abbas",
      "Wendy Sherman",
      "UN Security Council",
      "Head of Government (Chile)",
      "Portia Simpson Miller",
      "Cristina Fernández de Kirchner",
      "Lee Myung Bak",
      "Head of Government (South Korea)",
      "Christine Lagarde",
      "Head of Government (Guatemala)",
      "Agence France-Presse",
      "World Organization Against Torture",
      "John Dramani Mahama",
      "Human Rights Watch",
      "Juan Carlos Pinzon",
      "Alan Purisima",
      "Andrej Kiska",
      "Chuck Hagel",
      "Ruben Dario Alzate",
      "Zhang Dejiang",
      "Governor General (Canada)",
      "Ted Poe",
      "Leopoldo López",
      "Vietnam",
      "High Commission for Refugees",
      "Foreign Affairs (Argentina)",
      "Luis de Almagro",
      "Loretta Lynch",
      "Majid Takht Ravanchi",
      "Japan",
      "South Africa",
      "Guatemala",
      "Daniel Ortega",
      "Benedict XVI",
      "Citizen (Brazil)",
      "Office of the United Nations High Commissioner for Human Rights",
      "Solomon Passy",
      "Cyril Svoboda",
      "Colombia",
      "Camilo Reyes Rodríguez",
      "Head of Government (Colombia)",
      "National Liberation Army",
      "Domestic Affairs (Colombia)",
      "Member of Legislative (Govt) (South Korea)",
      "Guerrilla (Cuba)",
      "Citizen (Venezuela)",
      "Mario Uribe Escobar",
      "Citizen (International)",
      "Government (France)",
      "Middle East",
      "Sander Levin",
      "Lawmaker (Colombia)",
      "South Korea",
      "Gabriel Silva Luján",
      "Citizen (Australia)",
      "Liu Yandong",
      "Ronald Kirk",
      "Police (Indonesia)",
      "Attorney General (Ecuador)",
      "Envoy (France)",
      "Media Personnel (Colombia)",
      "Chongwadai",
      "Elmar Mammadyarov",
      "Guerrilla (Colombia)",
      "Chen Deming",
      "Yoani Sánchez",
      "Head of Government (Qatar)",
      "Head of Government (Uruguay)",
      "Indigenous People (Taiwan)",
      "Benjamin Netanyahu",
      "Defense / Security Ministry (Colombia)",
      "Rafael Ramírez",
      "Heraldo Muñoz"
    ],
    "evaluation": {
      "precision": 0.013793103448275862,
      "recall": 1.0,
      "f1": 0.027210884353741496,
      "exact_match": false,
      "intersection_count": 2
    },
    "process_time": 9.064939737319946
  },
  {
    "quid": 2000035,
    "question": "When did Jakaya Mrisho Kikwete support France?",
    "ground_truth": [
      "2013-04-02"
    ],
    "analysis": {
      "question_type": "time_query",
      "key_entities": [
        "Jakaya Mrisho Kikwete",
        "France"
      ],
      "target_relations": [
        "support"
      ],
      "time_constraints": "null",
      "answer_type": "time",
      "query_strategy": "首先识别出关键实体'Jakaya Mrisho Kikwete'和'France'，以及目标关系'support'。这是一个时间查询问题，目的是找到Jakaya Mrisho Kikwete支持法国的具体时间。查询策略是在时序知识图谱中查找这两个实体之间'support'关系的时间信息。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    try:\n        entities = ['Jakaya Mrisho Kikwete', 'France']\n        target_relations = ['Make_a_visit']\n        \n        results = []\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 对于\"first time\"类型的查询，需要找到特定关系的最早记录\n        if len(entities) >= 2:\n            entity1, entity2 = entities[0], entities[1]\n            \n            # 尝试多种实体名称格式\n            entity1_patterns = [entity1, entity1.replace(' ', '_'), entity1.replace('_', ' ')]\n            entity2_patterns = [entity2, entity2.replace(' ', '_'), entity2.replace('_', ' ')]\n            \n            for e1_pattern in entity1_patterns:\n                for e2_pattern in entity2_patterns:\n                    # 查找 entity1 -> relation -> entity2 的记录\n                    mask = (\n                        (df['head'].str.contains(e1_pattern, case=False, na=False)) &\n                        (df['tail'].str.contains(e2_pattern, case=False, na=False)) &\n                        (df['relation'].isin(target_relations))\n                    )\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            year = row['timestamp'][:4]\n                            results.append(year)\n        \n        # 返回最早的年份\n        if results:\n            earliest_year = min(results)\n            return [earliest_year]\n        else:\n            return []\n            \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "2006"
    ],
    "evaluation": {
      "precision": 0.0,
      "recall": 0.0,
      "f1": 0,
      "exact_match": false,
      "intersection_count": 0
    },
    "process_time": 12.068094730377197
  },
  {
    "quid": 2000036,
    "question": "Before 10 August 2005, which country was rejected by Iran?",
    "ground_truth": [
      "France",
      "Lawyer/Attorney (Egypt)",
      "Asylum Seeker (Iran)",
      "Tony Blair",
      "United Arab Emirates",
      "Iraq"
    ],
    "analysis": {
      "question_type": "entity_query",
      "key_entities": [
        "Iran"
      ],
      "target_relations": [
        "rejected"
      ],
      "time_constraints": "before 10 August 2005",
      "answer_type": "entity",
      "query_strategy": "查询在2005年8月10日之前被伊朗拒绝的国家实体"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Iran']\n        time_constraint = \"before 10 August 2005\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Islam Karimov",
      "Oluṣẹgun Ọbasanjọ",
      "Riaz Khokhar",
      "Representatives (Russia)",
      "UN Security Council",
      "Special Rapporteurs of the United Nations",
      "Pervez Musharraf",
      "Shaukat Aziz",
      "Head of Government (Pakistan)",
      "United Arab Emirates",
      "Ministry (Egypt)",
      "Refugee (Afghanistan)",
      "Education Ministry (Algeria)",
      "Muhammad Naji al-Otari",
      "Mehdi Karrubi",
      "Media Personnel (International)",
      "Koichiro Matsuura",
      "Mohammad Salimi",
      "Ministry of Tourism (Tunisia)",
      "Sherali Khayrulloyev",
      "Congress of Deputies",
      "Ministry (Senegal)",
      "Mohammad Mohaqiq",
      "Romania",
      "Iraq",
      "Mahmoud Ahmadinejad",
      "Ali Abdullah Saleh",
      "Gholamali Haddad Adel",
      "Nabih Berri",
      "Lari",
      "Information / Communication / Transparency Ministry (Iraq)",
      "France",
      "Kuwait",
      "Foreign Affairs (India)",
      "Foreign Affairs (South Korea)",
      "Passenger Jet (Iraq)",
      "Ahmad Chalabi",
      "China",
      "Foreign Affairs (South Africa)",
      "National Security Advisor (Iraq)",
      "Nonaligned Movement",
      "National Airline (Iraq)",
      "Adil Abdul-Mahdi",
      "Sergey Vladilenovich Kiriyenko",
      "Saydullo Khayrulloyev",
      "Human Rights Commission (Pakistan)",
      "Ministry (Afghanistan)",
      "Japan",
      "Valentin Sobolev",
      "Javier Solana",
      "Pilgrim (Kyrgyzstan)",
      "Energy Department/Ministry (Russia)",
      "Foreign Affairs (Denmark)",
      "Farouk al-Sharaa",
      "Ricardo Cabrisas",
      "Jack Straw",
      "Okada Katsuya",
      "Jakaya Mrisho Kikwete",
      "Head of Government (Qatar)",
      "Foreign Affairs (Belarus)",
      "Saud bin Faisal bin Abdul-Aziz",
      "Yemen",
      "Abdullah Gül",
      "Abdoulaye Wade",
      "Georgios Papandreou",
      "Sheikh Hamad bin Khalifa al-Thani",
      "Foreign Affairs (Syria)",
      "City Mayor (Iraq)",
      "Saifur Rahman",
      "Donald Rumsfeld",
      "Joschka Fischer",
      "Council of Representatives",
      "Jack Lang",
      "Ismaïl Omar Guelleh",
      "Nuri al-Maliki",
      "Head of Government (Belarus)",
      "Pier Ferdinando Casini",
      "Oman",
      "Jusuf Kalla",
      "Indigenous People (United States)",
      "Legislature (Iraq)",
      "Member of Legislative (Govt) (Lebanon)",
      "Head of Government (Gambia)",
      "Vietnam",
      "Envoy (France)",
      "Sudan",
      "National Security Advisor (Saudi Arabia)",
      "Bandar bin Sultan",
      "Mahdi Army",
      "Supreme Council (Iraq)",
      "Agence France-Presse",
      "Angel Luis D'Elia",
      "Activist (United States)",
      "Abu Bakr Abdullah al-Qirbi",
      "Mahmoud Abbas",
      "Economic Cooperation Organization",
      "Arab Israelis",
      "Mohammed Jassem Al-Sager",
      "Abdul Kadir",
      "Daniel Ortega",
      "Head of Government (Turkmenistan)",
      "Richard Boucher",
      "Gurbanguly Berdymukhammedov",
      "Kazakhstan",
      "Elmar Mammadyarov",
      "Rashid Meredov",
      "Businessperson (Netherlands)",
      "Sergei Ivanovich Shmatkó",
      "National Security Advisor (Georgia)",
      "National Security Council of Georgia",
      "Foreign Affairs (France)",
      "Tourist (Belgium)",
      "Foreign Affairs (Belgium)",
      "Ministry (Morocco)",
      "Lawmaker (United Kingdom)",
      "Party Member (Iraq)",
      "Shivshankar Menon",
      "Murli Deora",
      "Shura Council",
      "Envoy (Thailand)",
      "Industry (India)",
      "Gazprom",
      "Government Official (Russia)",
      "Member of Parliament (Iraq)",
      "Mohammad Ali Jafari",
      "Esfandiar Rahim Mashaei",
      "Media Personnel (China)",
      "Attorney General (Cyprus)",
      "Isaias Afewerki",
      "Muslim (United Kingdom)",
      "High Ranking Military Personnel (Syria)",
      "Ali al-Dabbagh",
      "Qatar",
      "Ahmed Abdallah Sambi",
      "Gazprom Neft",
      "Barack Obama",
      "Foreign Affairs (Malaysia)",
      "Hamrokhon Zarifi",
      "Evo Morales",
      "High Commission for Refugees",
      "Rafael Correa",
      "Rafiq Hariri",
      "Massoud Barzani",
      "Sheikh Hamad bin Isa al Khalifah",
      "Mehmet Simsek",
      "Maria Isabel Salvador",
      "Head of Government (South Korea)",
      "African Union",
      "Gerhard Schröder",
      "Angela Merkel",
      "Rehman Malik",
      "Legislature (Venezuela)",
      "Miguel d' Escoto Brockmann",
      "Makhdoom Shah Mahmood Qureshi",
      "Ministry (Oman)",
      "Yunus Qanuni",
      "Benjamin Netanyahu",
      "Petr Lom",
      "Media Personnel (Greece)",
      "Foreign Affairs (Venezuela)",
      "Qabus ibn Sa`id",
      "Member of Legislative (Govt) (Turkmenistan)",
      "Ministry (Venezuela)",
      "Benazir Bhutto",
      "Member of Legislative (Govt) (Syria)",
      "Grigol Vashadze",
      "Member of Legislative (Govt) (South Africa)",
      "Mohamed Ould Abdel Aziz",
      "National Assembly of Pakistan",
      "Legislature (South Africa)",
      "Afghanistan Investment Support Agency",
      "Thailand",
      "Airline (Kyrgyzstan)",
      "Head of Government (Uruguay)",
      "Foreign Affairs (Israel)",
      "Foreign Affairs (Gabon)",
      "Head of Government (Greece)",
      "Business (Poland)",
      "Head of Government (Brazil)",
      "Ministry (Brazil)",
      "Head of Government (Sri Lanka)",
      "Karim Wade",
      "Malaysia",
      "Member of Parliament (Indonesia)",
      "Zalmai Rassoul",
      "Ministry (Sudan)",
      "Cambodia",
      "Progressive Socialist Party",
      "Bolivia",
      "Indigenous People (United Kingdom)",
      "Ebrahim Yazdi",
      "Jawad al-Bulani",
      "Justin Koumba",
      "George Yeo",
      "Free Democratic Party",
      "Ahmad Shuja Pasha",
      "Mohammed Qasim Fahim",
      "Envoy (International)",
      "Ali Baqeri",
      "International Government Organizations",
      "Citizen (Saudi Arabia)",
      "Head of Government (Kenya)",
      "Royal Administration (Jordan)",
      "Foreign Affairs (Uruguay)",
      "Chen Zhili",
      "International Monetary Fund",
      "Inter-Services Intelligence",
      "Tourist (Turkey)",
      "Foreign Affairs (Austria)",
      "Ombudsman (Kyrgyzstan)",
      "Head of Government (Ghana)",
      "Catherine Ashton",
      "High Ranking Military Personnel (Oman)",
      "Meira Kumar",
      "Chief of Staff (Iraq)",
      "Spy Plane (United States)",
      "Central Intelligence Agency",
      "Naval (United States)",
      "Farooq Abdullah",
      "Ministry (Zimbabwe)",
      "Transport (China)",
      "Mohammad Reza Naqdi",
      "Other Authorities / Officials (Brazil)",
      "Treasury/Finance Ministry (Syria)",
      "Raúl Castro",
      "Government Affiliated Bank (Belarus)",
      "Head of Government (Egypt)",
      "Royal Administration (Saudi Arabia)",
      "Prime Minister Bhattarai",
      "Foreign Affairs (Lebanon)",
      "Yasser Ali",
      "Head of Government (India)",
      "Boediono",
      "Foreign Affairs (Brunei)",
      "Khandu Wangchuk",
      "Tsakhiagiyn Elbegdorj",
      "Head of Government (Mongolia)",
      "Protester (Egypt)",
      "Ministry (Tunisia)",
      "Pilgrim (Pakistan)",
      "Student (Tajikistan)",
      "Lawmaker (Vietnam)",
      "Pilgrim (India)",
      "Mohammad Soleimani",
      "Defense / Security Ministry (United States)",
      "Congress (Argentina)",
      "Head of Government (Burundi)",
      "Consultative Assembly (Oman)",
      "Ahmad Mohamed Ibrahim",
      "High Ranking Military Personnel (Sudan)",
      "National Alliance (Iraq)",
      "Aladdin Boroujerdi",
      "Omar Halleslevens",
      "Foreign Affairs (Italy)",
      "Military Personnel (Azerbaijan)",
      "Envoy (Oman)",
      "Indigenous People (Syria)",
      "South Africa",
      "Justice and Development Party",
      "Member of Legislative (Govt) (Algeria)",
      "Armed Rebel (Syria)",
      "Hannes Swoboda",
      "House of Representatives (Indonesia)",
      "Emma Bonino",
      "Dmitry Olegovich Rogozin",
      "Rodrigo Jalloul",
      "Majid Takht Ravanchi",
      "Ireland",
      "Member of Legislative (Govt) (South Korea)",
      "South Korea",
      "Portugal",
      "Radoslaw Sikorski",
      "Foreign Affairs (Singapore)",
      "Business (Germany)",
      "Ministry (Poland)",
      "Lawmaker (Lebanon)",
      "Edgars Rinkevics",
      "ANS Group of Companies",
      "Heinz Fischer",
      "Santos Edelmar Lopez",
      "Simon Gass",
      "Business (Belgium)",
      "Business (Hungary)",
      "Envoy (Germany)",
      "Morteza Sarmadi",
      "Government (South Africa)",
      "Member of Legislative (Govt) (Slovenia)",
      "Royal Administration (Spain)",
      "Amina Mohamed",
      "Martin Lidegaard",
      "Treasury/Finance Ministry (Azerbaijan)",
      "Lawyer/Attorney (United Kingdom)",
      "Haider Al-Abadi",
      "Tourist (Austria)",
      "Ministry (Vietnam)",
      "Nguyen Xuan Phuc",
      "Head of Government (Chad)",
      "Staffan de Mistura",
      "Tourist (South Korea)",
      "Mohammad Nahavandian",
      "International Federation of Red Cross and Red Crescent Societies",
      "Ashraf Ghani Ahmadzai",
      "Sergey Kuzhugetovich Shoygu",
      "Muhammad Salem al-Ghabban",
      "Davit Usupashvili",
      "Bertie Ahern",
      "Wang Yi",
      "Xi Jinping",
      "Lawyer/Attorney (Uzbekistan)",
      "Julie Bishop",
      "Nur Ahmad Nikbakht",
      "Nasser Judeh",
      "Pham Binh Minh",
      "Fishermen (India)",
      "Pakistan People's Party",
      "Vojtěch Filip",
      "Fahed al-Jasem el-Freij",
      "Ali Jannati",
      "Fuad Masum",
      "Behrouz Kamalvandi",
      "Rasim Ljajic",
      "Royal Dutch Shell",
      "Doctors Without Borders",
      "Ali Tayyebnia",
      "Philip Hammond",
      "Head of Government (Germany)",
      "Treasury/Finance Ministry (Germany)",
      "Federica Mogherini",
      "Sabah Khaled Al-Hamad Al-Sabah",
      "Shahin Mustafayev",
      "Treasury/Finance Ministry (Japan)",
      "Viktor Orban",
      "Mexico",
      "Stephane Le Foll",
      "Ministry (Switzerland)",
      "Representative to the United Nations (Chile)",
      "Tourist (Poland)",
      "Eshaq Jahangiri",
      "Muhammadu Buhari",
      "Company - Owner or Operator (Italy)",
      "Alexis Tsipras",
      "Industrial / Textiles / Mining Ministry (Sweden)",
      "Daniel Mitov",
      "Igor Ivanovich Shuvalov",
      "Denis Manturov",
      "Ethiopia",
      "Public Works (Kuwait)",
      "Comoros",
      "Fawzi Salloukh",
      "Business (Belarus)",
      "Court Judge (Malaysia)",
      "Angola",
      "Colombia",
      "Middle East",
      "The Hague",
      "Eritrea",
      "Bhutan",
      "Togo",
      "Refugee (Sri Lanka)",
      "Djibouti",
      "Muhammad VI",
      "Government (Pakistan)",
      "Macky Sall",
      "Niger",
      "Legislature (Ecuador)",
      "Anandiben Patel",
      "Kamaladdin Heydarov",
      "Burundi",
      "Tanzania",
      "al-Aqsa Martyrs' Brigades",
      "Simbarashe Mumbengegwi",
      "Iran",
      "The Chronicle",
      "Ministry (Iran)",
      "Amanullah Khan",
      "Professor (Netherlands)",
      "Business (Iraq)",
      "Borys Tarasyuk",
      "Tony Blair",
      "Ruprecht Polenz",
      "Energy Department/Ministry (Afghanistan)",
      "Government Delegation (China)",
      "Associated Press",
      "Bill Richardson",
      "Philip Alston",
      "Russian Railways",
      "Zurab Nogaideli",
      "Undersecretary (United States)",
      "Ministry (United States)",
      "General Contractor (Iran)",
      "Citizen (United Kingdom)",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Jew (Israel)",
      "Envoy (United States)",
      "Media Personnel (Iran)",
      "Royal Administration (Iran)",
      "Solomon Passy",
      "Shimon Peres",
      "Korean Workers Party",
      "Businessperson (Turkey)",
      "Reinhold Stephanes",
      "Member of Legislative (Govt) (Iran)",
      "Education (Iran)",
      "Student (Iran)",
      "Dmitry Anatolyevich Medvedev",
      "Business (Iran)",
      "Ministry of Tourism (Sri Lanka)",
      "Congress (United States)",
      "Businessperson (Italy)",
      "Citizen (Venezuela)",
      "Legislature (Bahrain)",
      "Airline (Iran)",
      "Citizen (Brazil)",
      "Austria Press Agency",
      "Seyran Ohanyan",
      "Malam Bacai Sanhá",
      "Ministry of Health",
      "Ministry of Women (Senegal)",
      "Foreign Affairs (Ethiopia)",
      "Armando Benedetti",
      "Yoshihiko Noda",
      "Wendy Sherman",
      "Foreign Affairs (Latin America)",
      "Mehr News Agency",
      "Wen Jiabao",
      "Mohammad Abbasi",
      "Citizen (International)",
      "Energy Department/Ministry (Iran)",
      "Lawmaker (Syria)",
      "Cristina Fernández de Kirchner",
      "United States Senate",
      "Representatives (Syria)",
      "Chuck Hagel",
      "Citizen (Benin)",
      "Admiral (Iran)",
      "Envoy (Afghanistan)",
      "Legislature (Turkey)",
      "Business (Austria)",
      "Senate (Italy)",
      "Foreign Affairs (Romania)",
      "Legislature (Romania)",
      "Tasnim news agency",
      "Lawmaker (Switzerland)",
      "Government (Poland)",
      "Member of Parliament (France)",
      "Lawmaker (Nicaragua)",
      "Health Ministry (Russia)",
      "Legislature (Spain)",
      "Legislature (Czech Republic)",
      "Foreign Affairs (Slovakia)",
      "Citizen (Denmark)",
      "Derek Plumbly",
      "Citizen (Nigeria)",
      "Passenger Jet (Iran)",
      "Tourist (United States)",
      "Attorney General (Qatar)",
      "Alireza Bigdeli",
      "Dmitriy Kiselev",
      "Environment Department/Ministry (Italy)",
      "Tatarstan",
      "Rand Paul",
      "Ministry of Shipping (Iran)",
      "Ministry of Tourism (Croatia)",
      "Ministry (Czech Republic)",
      "Special Commission (Iran)",
      "Media Personnel (Serbia)",
      "Natig Aliyev",
      "Karl Erjavec"
    ],
    "evaluation": {
      "precision": 0.008547008547008548,
      "recall": 0.6666666666666666,
      "f1": 0.01687763713080169,
      "exact_match": false,
      "intersection_count": 4
    },
    "process_time": 9.517033338546753
  },
  {
    "quid": 2000037,
    "question": "When did Royal Dutch Shell first formally sign an agreement with Iran?",
    "ground_truth": [
      "2007-01-31"
    ],
    "analysis": {
      "question_type": "time_query",
      "key_entities": [
        "Royal Dutch Shell",
        "Iran"
      ],
      "target_relations": [
        "formally sign an agreement"
      ],
      "time_constraints": "",
      "answer_type": "time",
      "query_strategy": "查询时序知识图谱中Royal Dutch Shell与Iran之间首次正式签署协议的时间。"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    try:\n        entities = ['Royal Dutch Shell', 'Iran']\n        target_relations = ['Make_a_visit']\n        \n        results = []\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 对于\"first time\"类型的查询，需要找到特定关系的最早记录\n        if len(entities) >= 2:\n            entity1, entity2 = entities[0], entities[1]\n            \n            # 尝试多种实体名称格式\n            entity1_patterns = [entity1, entity1.replace(' ', '_'), entity1.replace('_', ' ')]\n            entity2_patterns = [entity2, entity2.replace(' ', '_'), entity2.replace('_', ' ')]\n            \n            for e1_pattern in entity1_patterns:\n                for e2_pattern in entity2_patterns:\n                    # 查找 entity1 -> relation -> entity2 的记录\n                    mask = (\n                        (df['head'].str.contains(e1_pattern, case=False, na=False)) &\n                        (df['tail'].str.contains(e2_pattern, case=False, na=False)) &\n                        (df['relation'].isin(target_relations))\n                    )\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            year = row['timestamp'][:4]\n                            results.append(year)\n        \n        # 返回最早的年份\n        if results:\n            earliest_year = min(results)\n            return [earliest_year]\n        else:\n            return []\n            \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "2015"
    ],
    "evaluation": {
      "precision": 0.0,
      "recall": 0.0,
      "f1": 0,
      "exact_match": false,
      "intersection_count": 0
    },
    "process_time": 9.984721899032593
  },
  {
    "quid": 2000038,
    "question": "Who wanted diplomatic cooperation with Japan before March 2005?",
    "ground_truth": [
      "South Korea",
      "Roh Moo Hyun",
      "China",
      "Thailand",
      "Mexico"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Japan"
      ],
      "target_relations": [
        "wanted diplomatic cooperation with"
      ],
      "time_constraints": "before March 2005",
      "answer_type": "entity",
      "query_strategy": "查询在2005年3月之前与日本有外交合作意愿的实体"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Japan']\n        time_constraint = \"before March 2005\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [
      "Jack Straw",
      "Ho Mei-yueh",
      "Henry Tang",
      "Kim Jong Pil",
      "UN Security Council",
      "George Yeo",
      "Mahmoud Abbas",
      "Doctors Without Borders",
      "Rafiq Hariri",
      "China",
      "Iran",
      "Ma Ying Jeou",
      "Transport (South Korea)",
      "Energy Department/Ministry (Russia)",
      "Alberto Fujimori",
      "Cabinet / Council of Ministers / Advisors (United States)",
      "Roh Moo Hyun",
      "Ali Abdullah Saleh",
      "Lien Chan",
      "Head of Government (Colombia)",
      "Student (Laos)",
      "Mitsubishi",
      "Party Member (Taiwan)",
      "South Korea",
      "Gazprom",
      "Envoy (United States)",
      "Foreign Affairs (South Korea)",
      "City Mayor (Australia)",
      "Head of Government (Finland)",
      "Head of Government (Portugal)",
      "Mikulas Dzurinda",
      "Mikhail Sergeyevich Gorbachev",
      "Wen Jiabao",
      "Chung Dong-young",
      "Head of Government (Brazil)",
      "Head of Government (Germany)",
      "Kuomintang",
      "Royal Administration (Spain)",
      "Sheikh Hamad bin Khalifa al-Thani",
      "Indigenous People (Taiwan)",
      "Franklin Drilon",
      "Congress (Peru)",
      "Prime Minister Qarase",
      "Emperor Akihito",
      "Head of Government (Bangladesh)",
      "Admiral (Russia)",
      "Head of Government (Palau)",
      "Head of Government (Pakistan)",
      "Head of Government (Ukraine)",
      "Vietnam",
      "Shaukat Aziz",
      "Student (Palestinian Territory, Occupied)",
      "Media (United States)",
      "Ryutaro Hashimoto",
      "Elizabeth II",
      "Member of Parliament (Thailand)",
      "Benjamin Netanyahu",
      "Okada Katsuya",
      "Immigrants (Peru)",
      "Student (Bangladesh)",
      "Donald Rumsfeld",
      "Wang Yi",
      "Bill Richardson",
      "Undersecretary (United States)",
      "Chongwadai",
      "Head of Government (Greece)",
      "Chu Tuan Nha",
      "Special Rapporteurs of the United Nations",
      "Mikhail Yefimovich Fradkov",
      "Foreign Affairs (Romania)",
      "Muhammad VI",
      "Iraq",
      "Ante Gotovina",
      "Yasuo Fukuda",
      "Jusuf Kalla",
      "Energy Department/Ministry (United States)",
      "Head of Government (South Korea)",
      "Sergey Kuzhugetovich Shoygu",
      "Aigars Kalvitis",
      "Francis J. Harvey",
      "Head of Government (Mongolia)",
      "Joon Young Woo",
      "Saud bin Faisal bin Abdul-Aziz",
      "Kim Kye Gwan",
      "Royal Administration (Saudi Arabia)",
      "Naval (United States)",
      "Tamisuke Watanuki",
      "Wolfgang Schüssel",
      "Sali Berisha",
      "Grand National Party",
      "International Monetary Fund",
      "Business (Iran)",
      "Winston Peters",
      "Elyor Ganiyev",
      "Ahmad bin Abdul-Nabi Mekki",
      "James Wolfensohn",
      "Thailand",
      "William J. Fallon",
      "Military Personnel (Taiwan)",
      "High Ranking Military Personnel (Taiwan)",
      "Cambodia",
      "Laos",
      "Oluṣẹgun Ọbasanjọ",
      "Chuck Hagel",
      "Jakaya Mrisho Kikwete",
      "Elmar Mammadyarov",
      "Head of Government (Ghana)",
      "Head of Government (India)",
      "Alexander Valterovich Litvinenko",
      "Government (Palestinian Territory, Occupied)",
      "Council of Representatives",
      "Tzipi Livni",
      "City Mayor (China)",
      "Henry M. Paulson",
      "Attack Craft (United States)",
      "Sergey Vladilenovich Kiriyenko",
      "Russian Union of Industrialists and Entrepreneurs",
      "Evo Morales",
      "Shimon Peres",
      "Legislature (Iraq)",
      "Planning Commission (India)",
      "Party Member (Iraq)",
      "Jason C. Hu",
      "Military Personnel (South Korea)",
      "Nuri al-Maliki",
      "Monastery (China)",
      "Japan Red Army",
      "Information / Communication / Transparency Ministry (Angola)",
      "Angela Merkel",
      "Foreign Affairs (Malaysia)",
      "Head of Government (Taiwan)",
      "Dissident (China)",
      "Activist (United States)",
      "Linda Lingle",
      "Sanae Takaichi",
      "Tony Blair",
      "Head of Government (Chile)",
      "Lee Myung Bak",
      "Royal Air Force",
      "A.S.S. Hannan Shah",
      "Assemblies (Cambodia)",
      "Defense / Security Ministry (United States)",
      "Islam Karimov",
      "Taiwan Affairs Office",
      "High Commission for Refugees",
      "Armed Separatist (China)",
      "Association of Southeast Asian Nations",
      "United Arab Emirates",
      "Dmitry Anatolyevich Medvedev",
      "Benazir Bhutto",
      "Member of Legislative (Govt) (South Korea)",
      "Army Chief of Staff (United States)",
      "Mehmet Simsek",
      "International Government Organizations",
      "Christine Lagarde",
      "Shigeru Ishiba",
      "Sudan",
      "Military (Russia)",
      "Janez Jansa",
      "Abdul-Karim Al-Arhabi",
      "Xi Jinping",
      "Abdullah Gül",
      "Sergei Ivanovich Shmatkó",
      "Foreign Affairs (France)",
      "Chris Evans",
      "A.K. Antony",
      "Mexico",
      "South Africa",
      "Foreign Affairs (India)",
      "Boris Vyacheslavovich Gryzlov",
      "Kaoru Yosano",
      "Scientist (Russia)",
      "Representatives (Russia)",
      "Radoslaw Sikorski",
      "Maxime Verhagen",
      "Barack Obama",
      "Juan Carlos I",
      "Media Personnel (Iran)",
      "Abhisit Vejjajiva",
      "Grigol Vashadze",
      "Stephen W. Bosworth",
      "Company - Owner or Operator (Kyrgyzstan)",
      "Martin Bursík",
      "Representatives (Kyrgyzstan)",
      "Samsung",
      "Tsai Ing-wen",
      "Rafael Ramírez",
      "Nasser Judeh",
      "Ministry (Iran)",
      "Lawrence Cannon",
      "Gary Roughead",
      "Miguel d' Escoto Brockmann",
      "City Mayor (United States)",
      "Lawyer/Attorney (United States)",
      "USS Nimitz",
      "Anupong Paochinda",
      "Bhutan",
      "Jack Lang",
      "Vuk Jeremić",
      "Joint Chiefs of Staff (United States)",
      "Head of Government (Turkmenistan)",
      "Ministry (South Korea)",
      "Bruno Stagno Ugarte",
      "Member of Legislative (Govt) (Iran)",
      "Aladdin Boroujerdi",
      "City Mayor (New Zealand)",
      "Ministry (Mainland Affairs Council)",
      "Julie Bishop",
      "Cabinet / Council of Ministers / Advisors (Kazakhstan)",
      "Benjamin William Mkapa",
      "Herman Van Rompuy",
      "Foreign Affairs (Israel)",
      "John Faulkner",
      "Finance / Economy / Commerce / Trade Ministry (Australia)",
      "Secret Agent (South Korea)",
      "Sengoku Yoshito",
      "Rafael Correa",
      "Tim Pawlenty",
      "Kazuhiro Haraguchi",
      "Abu Bakr Abdullah al-Qirbi",
      "Tsakhiagiyn Elbegdorj",
      "Boediono",
      "Media Personnel (International)",
      "Presidential Family (Mongolia)",
      "Igor Ivanovich Shuvalov",
      "Ismaïl Omar Guelleh",
      "Philip J. Crowley",
      "Sadako Ogata",
      "Jens Stoltenberg",
      "Head of Government (Bahrain)",
      "Israeli Defense Forces",
      "Employee (Israel)",
      "France",
      "Transport (China)",
      "Julia Gillard",
      "Takeaki Matsumoto",
      "Agustín Carstens",
      "Democratic Party",
      "Noppadon Pattama",
      "Yoshihiko Noda",
      "Yasuo Ichikawa",
      "Bev Perdue",
      "Central Intelligence Agency",
      "Finance / Economy / Commerce / Trade Ministry (Russia)",
      "Wendy Sherman",
      "Jetsun Pema Wangchuck",
      "Foreign Affairs (Kosovo)",
      "Foreign Affairs (Zambia)",
      "Kittiratt Na-Ranong",
      "Foreign Affairs (Nepal)",
      "Student (Thailand)",
      "Andrius Kubilius",
      "Eric Besson",
      "Kuwait",
      "Samuel J. Locklear",
      "Norodom Sihanouk",
      "Foreign Affairs (Singapore)",
      "Michael Sata",
      "Hamrokhon Zarifi",
      "Angola",
      "Yamamoto Ichita",
      "Indigenous People (United Kingdom)",
      "Ed Royce",
      "Defense / Security Ministry (Estonia)",
      "Valdis Dombrovskis",
      "Ethiopia",
      "Hisham Qandil",
      "William Ruto",
      "Gurbanguly Berdymukhammedov",
      "Pat Quinn",
      "Jacob J. Lew",
      "People First Party Korea",
      "Christian Noyer",
      "Nadine Heredia",
      "Oman",
      "Irakli Alasania",
      "Toomas Hendrik Ilves",
      "Andrew Robb",
      "Hashim Thaçi",
      "Malaysia",
      "Moro Islamic Liberation Front",
      "Citizen (North Korea)",
      "Rose Gottemoeller",
      "David Shear",
      "Ministry of Tourism (Croatia)",
      "Suh Chung-won",
      "Governor (South Korea)",
      "Health Ministry (Iran)",
      "Thongsing Thammavong",
      "Presidential Family (United States)",
      "Ricardo Cabrisas",
      "Uhuru Muigai Kenyatta",
      "Tan Sri Muhyiddin Yassin",
      "Pedro Manuel Mamede Passos Coelho",
      "Peter O'Neill",
      "Tourist (Southeast Asia)",
      "Nicholas \"Nick\" Xenophon",
      "Pham Binh Minh",
      "Abdel Fattah Al-Sisi",
      "Student (Kenya)",
      "Mogens Lykketoft",
      "Shivraj Singh Chouhan",
      "Austin \"Jack\" Warner",
      "Boris Johnson",
      "Energy Department/Ministry (Iran)",
      "Head of Government (Egypt)",
      "Abdul Hamid",
      "Aceh",
      "Ireland",
      "Businessperson (Laos)",
      "Middle East",
      "Yemen",
      "Romania",
      "Foreign Affairs (Liberia)",
      "Kazakhstan",
      "Somsavat Lengsava",
      "Japan",
      "Sex Trade (China)",
      "Aguinaldo Jaime",
      "Eritrea",
      "Luka Bebic",
      "Treasury/Finance Ministry (Egypt)",
      "Guatemala",
      "The Hague",
      "South Sudan",
      "Northern Ireland",
      "William Kabogo",
      "John Baird",
      "Health Ministry (Russia)",
      "Yury Mikhaylovich Luzhkov",
      "Paramount Ruler Sirajuddin",
      "Representatives (Japan)",
      "Jay Rockefeller",
      "Joe Manchin",
      "Lawmaker (Japan)",
      "National Security Advisor (South Korea)",
      "Royal Administration (Japan)",
      "Military Personnel (Japan)",
      "Donald J. Johnston",
      "Samuel Schmid",
      "Men (United States)",
      "Anguel Marin",
      "Media Personnel (Japan)",
      "Japan Self-Defense Forces",
      "African Union",
      "Valdas Adamkus",
      "Cabinet / Council of Ministers / Advisors (Japan)",
      "Governor (Japan)",
      "High Ranking Military Personnel (Japan)",
      "Citizen (Thailand)",
      "Takeo Nishioka",
      "Police (Israel)",
      "Men (Japan)",
      "Mainland Affairs Council",
      "Hideaki Kobayashi",
      "Government Official (Japan)",
      "Thanong Bidaya",
      "City Mayor (Iraq)",
      "Treasury/Finance Ministry (Japan)",
      "Representative to the United Nations (North Korea)",
      "Javier Solana",
      "Ministry (Brazil)",
      "Charles Murigande",
      "Ministry (Oman)",
      "Ram Paswan",
      "Robert M. Kimmitt",
      "Presidential Family (Japan)",
      "Industry (India)",
      "Rodrigo Rato",
      "Children (Azerbaijan)",
      "Peter Pace",
      "Citizen (Nigeria)",
      "House Speaker (Japan)",
      "Qatar",
      "Qin Gang",
      "Other Authorities / Officials (Russia)",
      "Treasury/Finance Ministry (Germany)",
      "Chen Bingde",
      "Citizen (Sudan)",
      "Foreign Affairs (Portugal)",
      "Citizen (Australia)",
      "Jew (Israel)",
      "Jian Yu",
      "Mahmoud Ahmadinejad",
      "Women / Children / Social / Welfare / Development / Religion Ministry (South Korea)",
      "Mwai Kibaki",
      "Citizen (International)",
      "Umaru Musa Yar'Adua",
      "Citizen (United Kingdom)",
      "Citizen (Bulgaria)",
      "Medical Personnel (Japan)",
      "Ministry (Switzerland)",
      "Finance / Economy / Commerce / Trade Ministry (Japan)",
      "Lockwood Smith",
      "Heinz Fischer",
      "Bill English",
      "Thief (Japan)",
      "Workers' Party (North Korea)",
      "Ben Shalom Bernanke",
      "Citizen (Brazil)",
      "Catherine Ashton",
      "Takahiro Yokomichi",
      "House of Representatives (Japan)",
      "Representatives (France)",
      "Citizen (Zambia)",
      "Finance / Economy / Commerce / Trade Ministry (Vietnam)",
      "Foreign Affairs (Austria)",
      "Citizen (Southeast Asia)",
      "Meira Kumar",
      "Philip Hammond",
      "Employee (Thailand)",
      "Kōichirō Genba",
      "Head of Government (Timor-Leste)",
      "María Ángela Holguín",
      "Mario Monti",
      "International Federation of Red Cross and Red Crescent Societies",
      "Sheikh Hamad bin Isa al Khalifah",
      "Uighur (Japan)",
      "Ivan Gasparovic",
      "State Duma (Japan)",
      "Wang Ching-feng",
      "Vincent C. Siew",
      "United States Senate",
      "Seamen (Russia)",
      "Colombia",
      "Campbell Newman",
      "Royal Administration (Croatia)",
      "Yu Zhengsheng",
      "Special Commission (United Nations)",
      "Finance / Economy / Commerce / Trade Ministry (New Zealand)",
      "Jay Inslee",
      "Portia Simpson Miller",
      "Viktor Orban",
      "Deval Patrick",
      "Raul Hernandez",
      "Solidarity",
      "Abdulla Yameen",
      "Chimed Saikhanbileg",
      "Larry Hogan",
      "Federica Mogherini",
      "Edgars Rinkevics",
      "Kazumi Matsui",
      "John Richardson",
      "Anatoly Antonov",
      "Yoon Sang-jick",
      "Steven Marshall"
    ],
    "evaluation": {
      "precision": 0.011210762331838564,
      "recall": 1.0,
      "f1": 0.022172949002217297,
      "exact_match": false,
      "intersection_count": 5
    },
    "process_time": 8.254269123077393
  },
  {
    "quid": 2000039,
    "question": "On 21 December 2009, which country announced its intention to cooperate with Iran?",
    "ground_truth": [
      "Iraq"
    ],
    "analysis": {
      "question_type": "relation_query",
      "key_entities": [
        "Iran"
      ],
      "target_relations": [
        "announced its intention to cooperate with"
      ],
      "time_constraints": "2009-12-21",
      "answer_type": "entity",
      "query_strategy": "在2009年12月21日的时间约束下，查询与'Iran'有'宣布合作意向'关系的国家实体"
    },
    "generated_code": "def query_kg(df):\n    import pandas as pd\n    import re\n    from datetime import datetime\n    \n    try:\n        results = []\n        entities = ['Iran']\n        time_constraint = \"2009-12-21\"\n        target_relations = ['Make_a_visit', 'Host_a_visit', 'Express_intent_to_meet_or_negotiate']\n        \n        # 处理时间约束\n        time_filter = None\n        if time_constraint:\n            if len(time_constraint) == 4:  # 年份\n                time_filter = time_constraint\n            elif len(time_constraint) == 7:  # 年-月\n                time_filter = time_constraint\n            elif len(time_constraint) == 10:  # 年-月-日\n                time_filter = time_constraint\n        \n        # 确保所有列都是字符串类型\n        for col in ['head', 'relation', 'tail', 'timestamp']:\n            if col in df.columns:\n                df[col] = df[col].astype(str)\n        \n        # 查找相关记录\n        if entities:\n            target_entity = entities[0]  # Ireland\n            \n            # 尝试多种实体名称格式\n            entity_patterns = [target_entity, target_entity.replace(' ', '_'), target_entity.replace('_', ' ')]\n            \n            for entity_pattern in entity_patterns:\n                # 查找 X -> relation -> target_entity 的记录（谁想访问Ireland）\n                for relation in target_relations:\n                    mask = (\n                        (df['tail'].str.contains(entity_pattern, case=False, na=False)) &\n                        (df['relation'] == relation)\n                    )\n                    \n                    # 应用时间过滤\n                    if time_filter and mask.any():\n                        mask = mask & (df['timestamp'].str.startswith(time_filter, na=False))\n                    \n                    if mask.any():\n                        filtered_df = df[mask]\n                        for _, row in filtered_df.iterrows():\n                            # 提取访问者\n                            visitor = row['head']\n                            # 清理实体名称\n                            visitor = visitor.replace('_', ' ')\n                            if visitor not in results:\n                                results.append(visitor)\n        \n        return results if results else []\n        \n    except Exception as e:\n        return [f\"查询错误: {str(e)}\"]",
    "predicted_answer": [],
    "evaluation": {
      "precision": 0,
      "recall": 0.0,
      "f1": 0,
      "exact_match": false,
      "intersection_count": 0
    },
    "process_time": 10.963240146636963
  }
]